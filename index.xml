<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kotazi.com</title>
    <link>http://kotazi.github.io/blog/</link>
    <description>Recent content on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jan 2016 17:42:38 +0900</lastBuildDate>
    <atom:link href="http://kotazi.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>【読書】イーロン・マスク 未来を創る男</title>
      <link>http://kotazi.github.io/blog/post/2016/0110_mask/</link>
      <pubDate>Sun, 10 Jan 2016 17:42:38 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0110_mask/</guid>
      <description>&lt;p&gt;&lt;a rel=&#34;nofollow&#34; href=&#34;http://www.amazon.co.jp/gp/product/4062196336/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4062196336&amp;linkCode=as2&amp;tag=kotazi-22&#34;&gt;イーロン・マスク 未来を創る男&lt;/a&gt;&lt;img src=&#34;http://ir-jp.amazon-adsystem.com/e/ir?t=kotazi-22&amp;l=as2&amp;o=9&amp;a=4062196336&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;を読みました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;夢を追う天才、イーロン・マスク。&lt;br /&gt;
Paypalの前身、X.com社の共同創業者であり、スペースX社のCEO、テスラ・モーターズのCEO、ソーラーシティ社の会長を務める。&lt;/p&gt;

&lt;p&gt;一見異なる事業をやっているように見えるがマスクの夢は「宇宙移民の実現と持続エネルギー問題の解決」であり一貫している。&lt;/p&gt;

&lt;p&gt;ペイパル共同創業者のピーター・ティールは「人々を幻滅させたのはテクノロジー産業だ」と言い、&lt;br /&gt;
彼の経営するベンチャーキャピタルのキャッチフレーズは「空飛ぶ車が欲しかったのに、出てきたものはたったの&amp;rdquo;140文字&amp;rdquo;」である。&lt;/p&gt;

&lt;p&gt;人々がイノベーションへの期待を忘れていく中、マスクは非現実的な目標を掲げ夢を追い続けている。&lt;/p&gt;

&lt;p&gt;そんなマスクの幼少期から現在までについて語られた一冊。&lt;/p&gt;

&lt;p&gt;マスクの宇宙にかける想いは強く、人類が地球にとどまらず惑星をまたいで活躍できる種に進化させようとしている。
人類滅亡を避けるためには別惑星でのコロニー建設が必要であり、それに人生を捧げている。&lt;/p&gt;

&lt;p&gt;火星を温暖化させなければ地球のような惑星にはならないが、それには1000年近く必要だと語っており、
マスク自身が生きている間には実現できないと考えているようだった。&lt;/p&gt;

&lt;p&gt;また、自身が火星に行くことについても、可能であれば行きたいが行く必要はないと答えている。
大切なのは数多くの人が火星に行けるようにすること、そして人類が生き延びられるかどうか。
そのために自身の参加は懸命ではないと思っているそうだ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【Rails】Routing周りのメモ書き</title>
      <link>http://kotazi.github.io/blog/post/2016/0107_rails_routing/</link>
      <pubDate>Thu, 07 Jan 2016 18:31:41 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0107_rails_routing/</guid>
      <description>

&lt;p&gt;新しいRailsプロジェクトの&lt;code&gt;routes.rb&lt;/code&gt;を読んでいて調べたこととか。&lt;/p&gt;

&lt;hr&gt;

&lt;h5 id=&#34;namespaceとscope-moduleとscopeのち外:67c557ff4a695278f8c1eb16d2539ac6&#34;&gt;◯ namespaceとscope moduleとscopeのち外&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;namespace&lt;/code&gt;はURI PatternもController#Actionも指定したパスに&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scope module&lt;/code&gt;はController#Actionのみ指定したパスに&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scope&lt;/code&gt;はURI Patternのみ指定したパスに&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/blueplanet/items/522cc8364f6cf189ecad&#34;&gt;routeのmoduleとnamespaceとscopeの違い&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;constraintsについて:67c557ff4a695278f8c1eb16d2539ac6&#34;&gt;◯ constraintsについて&lt;/h5&gt;

&lt;p&gt;constraintsを使うことでさまざまな制限を兼ねることができる。
独自のクラスを使用すうることなども可能。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://y-yagi.tumblr.com/post/92386974040/rails-routing-constraints%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6&#34;&gt;rails routing constraintsについて&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;resourcesルーティング一覧:67c557ff4a695278f8c1eb16d2539ac6&#34;&gt;◯ resourcesルーティング一覧&lt;/h5&gt;

&lt;table class=&#34;responsive&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;HTTP動詞&lt;/th&gt;
&lt;th&gt;パス&lt;/th&gt;
&lt;th&gt;コントローラ#アクション&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/photos&lt;/td&gt;
&lt;td&gt;photos#index&lt;/td&gt;
&lt;td&gt;すべての写真の一覧を表示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/photos/new&lt;/td&gt;
&lt;td&gt;photos#new&lt;/td&gt;
&lt;td&gt;写真を1つ作成するためのHTMLフォームを返す&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;/photos&lt;/td&gt;
&lt;td&gt;photos#create&lt;/td&gt;
&lt;td&gt;写真を1つ作成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/photos/:id&lt;/td&gt;
&lt;td&gt;photos#show&lt;/td&gt;
&lt;td&gt;特定の写真を表示する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;/photos/:id/edit&lt;/td&gt;
&lt;td&gt;photos#edit&lt;/td&gt;
&lt;td&gt;写真編集用のHTMLフォームを1つ返す&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PATCH/PUT&lt;/td&gt;
&lt;td&gt;/photos/:id&lt;/td&gt;
&lt;td&gt;photos#update&lt;/td&gt;
&lt;td&gt;特定の写真を更新する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;/photos/:id&lt;/td&gt;
&lt;td&gt;photos#destroy&lt;/td&gt;
&lt;td&gt;特定の写真を削除する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr&gt;

&lt;p&gt;ActiveAdminとEngineについてはまた今度。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【DMM英会話】Requesting Materials | Business Basic</title>
      <link>http://kotazi.github.io/blog/post/2016/0106_dmm/</link>
      <pubDate>Thu, 07 Jan 2016 00:46:15 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0106_dmm/</guid>
      <description>

&lt;p&gt;DMM英会話のレッスン中。その日学んだことをメモ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eikaiwa.dmm.com/download/pdf/Business_basic_04_01.pdf/&#34;&gt;Lesson 04: Requesting Materials | Business Basic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5 id=&#34;practice-1-formal-and-informal-expressions:dd5905c4b3178dddff745f2ed8769927&#34;&gt;◯ Practice 1 | Formal and Informal Expressions&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-2-reading-sentences:dd5905c4b3178dddff745f2ed8769927&#34;&gt;◯ Practice 2 | Reading Sentences&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-3-studying-the-manual:dd5905c4b3178dddff745f2ed8769927&#34;&gt;◯ Practice 3 | Studying the Manual&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Firstly, make sure that you have all the required permissions to get the materials.&lt;/li&gt;
&lt;li&gt;Find a person who is accountable for these materials.&lt;/li&gt;
&lt;li&gt;Explain to that person why you need the materials (if needed).&lt;/li&gt;
&lt;li&gt;Be polite and official, even if you are in a higher position.&lt;/li&gt;
&lt;li&gt;Check the materials the person gave you in front of him/her. Make sure all documents are there, since you will be held responsible even if it is not you who lost them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;意訳&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;はじめに、必要な権限を確認すること&lt;/li&gt;
&lt;li&gt;その件について責任がある人を見つけること&lt;/li&gt;
&lt;li&gt;その人に何故その資料が必要か説明すること&lt;/li&gt;
&lt;li&gt;丁寧であること。あなたが上層部の人間だとしても。&lt;/li&gt;
&lt;li&gt;その人の前で資料を確認すること。全てのドキュメントがあることを確かめること。他の誰かが無くしてもあなたに責任があります。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-4-situation-questions:dd5905c4b3178dddff745f2ed8769927&#34;&gt;◯ Practice 4 | Situation Questions&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Let’s imagine that you got a task to check some important documents. What will you need to do?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You came to your boss‘s secretary and she gave you the minutes of last two weeks. However, when you checked them in front of her, the reports of two meetings were missing. What do you do?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Your boss gave you a task for which you need some materials, but he forgot to give you a signed permission before he went on a long business trip. You cannot postpone the accomplishment of the task until he returns. What do you do?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You are asking the secretary to give you some materials you need urgently but she is new to the office and doesn‘t know where they are. What do you do?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;覚えた英単語:dd5905c4b3178dddff745f2ed8769927&#34;&gt;◯ 覚えた英単語&lt;/h5&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;単語&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;その他&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gather&lt;/td&gt;
&lt;td&gt;集める&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;conclusions&lt;/td&gt;
&lt;td&gt;結論&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;in order to do something&lt;/td&gt;
&lt;td&gt;〜ために&lt;/td&gt;
&lt;td&gt;with the purpose or intention of doing or achieving something&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;the minutes&lt;/td&gt;
&lt;td&gt;要約、議事録&lt;/td&gt;
&lt;td&gt;the minutes [plural] a summary or record of what is said or decided at a formal meeting&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;proxy&lt;/td&gt;
&lt;td&gt;代理人&lt;/td&gt;
&lt;td&gt;a person who has been given the authority to represent somebody else&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;She arrived early in order to get a good seat.&lt;/li&gt;
&lt;li&gt;Who is going to take the minutes (= write them)?&lt;/li&gt;
&lt;li&gt;if you have an authorization and a proxy from your boss.&lt;/li&gt;
&lt;li&gt;She is acting as proxy for her husband.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&amp;ldquo;the minutes&amp;rdquo;が議事録的な意味を持つとは知らなかった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【Rails】ForbiddenAttributesError覚書</title>
      <link>http://kotazi.github.io/blog/post/2016/0105_ForbiddenAttributesError/</link>
      <pubDate>Wed, 06 Jan 2016 18:31:41 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0105_ForbiddenAttributesError/</guid>
      <description>

&lt;p&gt;Railsで&lt;code&gt;ActiveModel::ForbiddenAttributesError:&lt;/code&gt;エラーが出た。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;マスアサインメント脆弱性:c93acd2fcd4285cd58c99e0793697162&#34;&gt;マスアサインメント脆弱性&lt;/h2&gt;

&lt;p&gt;モデルオブジェクトのassign_attributesメソッドの引数にハッシュもしくはparamsオブジェクトを渡せば、
モデルオブジェクトの属性を一括変更できる。フォームから送信することも可能。&lt;/p&gt;

&lt;p&gt;管理者などがパラメータを変更する分にはいいが、権限によっては書き換えてはならないパラメータもある。
けれども知識のある人間がスクリプト書けば悪用することができてしまう。&lt;/p&gt;

&lt;p&gt;このアプリケーションの脆弱性を&lt;strong&gt;マスアサインメント脆弱性&lt;/strong&gt;と呼ぶ。&lt;/p&gt;

&lt;p&gt;そしてこの脆弱性に対してRails4.0から導入された対抗策が、&lt;strong&gt;Strong Parameters&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;strong-parameters:c93acd2fcd4285cd58c99e0793697162&#34;&gt;Strong Parameters&lt;/h2&gt;

&lt;p&gt;サンプルコード:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def staff_member_params
  params.require(:staff_member).permit(
    :email, :password, :family_name, :given_name,
    :family_name_kana, :given_name_kana,
    :start_date, :end_date, :suspended
  )
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;params.require(:staff_member)&lt;/code&gt;&lt;br /&gt;
paramsオブジェクトのrequireメソッドで、paramsオブジェクトが&lt;code&gt;:staff_member&lt;/code&gt;というキーと持っているかを調べる。&lt;/p&gt;

&lt;p&gt;=&amp;gt; 持っていなければActionController::ParameterMissingエラー&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【DMM英会話】Asking for Directions | Business Basic</title>
      <link>http://kotazi.github.io/blog/post/2016/0105_dmm/</link>
      <pubDate>Tue, 05 Jan 2016 16:41:09 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0105_dmm/</guid>
      <description>

&lt;p&gt;DMM英会話のレッスン中。その日学んだことをメモ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eikaiwa.dmm.com/download/pdf/Business_basic_03_01.pdf/&#34;&gt;Lesson 03: Asking for Directions | Business Basic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5 id=&#34;practice-1-formal-and-informal-expressions:8cc24ae4bd464d21835acf55dfd4c192&#34;&gt;◯ Practice 1 | Formal and Informal Expressions&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-2-reading-sentences:8cc24ae4bd464d21835acf55dfd4c192&#34;&gt;◯ Practice 2 | Reading Sentences&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-3-studying-the-manual:8cc24ae4bd464d21835acf55dfd4c192&#34;&gt;◯ Practice 3 | Studying the Manual&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-4-situation-questions:8cc24ae4bd464d21835acf55dfd4c192&#34;&gt;◯ Practice 4 | Situation Questions&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Your boss gave you a task via email and some details are unclear to you. What do you do?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll get a few minutes from boss.
&amp;ldquo;Would you mind sparing me several minutes of your time?&amp;rdquo;
And I&amp;rsquo;ll ask boss about it in person.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;You were supposed to have a meeting with your business partner but you lost track of time and came one hour late – the partner wasn’t there anymore. What do you do?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll call him and tell that the apologies for being late.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;覚えた英単語:8cc24ae4bd464d21835acf55dfd4c192&#34;&gt;◯ 覚えた英単語&lt;/h5&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;単語&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;その他&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sparing&lt;/td&gt;
&lt;td&gt;倹約して、控えて&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;precision&lt;/td&gt;
&lt;td&gt;正確さ&lt;/td&gt;
&lt;td&gt;the quality of being exact, accurate and careful&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;I assure you&lt;/td&gt;
&lt;td&gt;保証する (I promiss you とは違うらしい)&lt;/td&gt;
&lt;td&gt;to tell somebody that something is definitely true or is definitely going to happen, especially when they have doubts about it&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;pleasant&lt;/td&gt;
&lt;td&gt;感じのよい、好感の持てる&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;informative&lt;/td&gt;
&lt;td&gt;有益な&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;firstly&lt;/td&gt;
&lt;td&gt;初めに(in the first はそもそも)&lt;/td&gt;
&lt;td&gt;used to introduce the first of a list of points you want to make in a speech or piece of writing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;account for something&lt;/td&gt;
&lt;td&gt;説明する&lt;/td&gt;
&lt;td&gt;to give an explanation of something&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;colleague&lt;/td&gt;
&lt;td&gt;同僚&lt;/td&gt;
&lt;td&gt;a person that you work with, especially in a profession or a business&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;He chose his words with precision.&lt;/li&gt;
&lt;li&gt;She&amp;rsquo;s perfectly safe, I can assure you.&lt;/li&gt;
&lt;li&gt;SHe was unable to account for the error.&lt;/li&gt;
&lt;li&gt;We were friends and colleagues for more than 20 years.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;2分あまったので今年の目標は何かと尋ねたら、&lt;br /&gt;
「別の仕事を見つけたい。」と言われた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【DMM英会話】Apologizing|Business Basic</title>
      <link>http://kotazi.github.io/blog/post/2016/0104_dmm/</link>
      <pubDate>Mon, 04 Jan 2016 16:41:09 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0104_dmm/</guid>
      <description>

&lt;p&gt;DMM英会話のレッスン中。その日学んだことをメモ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eikaiwa.dmm.com/download/pdf/Business_basic_02_01.pdf/&#34;&gt;Lesson 02: Apologizing|Business Basic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5 id=&#34;practice-1-formal-and-informal-expressions:a0f532c54eaaef29017b9735517d5d9f&#34;&gt;◯ Practice 1 | Formal and Informal Expressions&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-2-reading-sentences:a0f532c54eaaef29017b9735517d5d9f&#34;&gt;◯ Practice 2 | Reading Sentences&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-3-studying-the-manual:a0f532c54eaaef29017b9735517d5d9f&#34;&gt;◯ Practice 3 | Studying the Manual&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Correct timing. It is best to apologize as fast as you can, but no need to be impulsive. You needto prepare what to say.&lt;/li&gt;
&lt;li&gt;Wisely chosen means of communication. There are many ways to apologize: you can apologizein person, over the phone or write an apology letter. Having eye contact is a good thing since apologies are personal; however, if a person was deeply hurt, a letter might be a better way.&lt;/li&gt;
&lt;li&gt;Explanation without excuses. After apologizing you can shortly explain why this happened, but be careful not to start making excuses. This would be impolite.&lt;/li&gt;
&lt;li&gt;“The customer is always right” principle. Whenever you need to apologize to the customer or business partner, you need to think about this principle. Most of the time it is better to accept all the blame.&lt;/li&gt;
&lt;li&gt;A quick explanation of what you will do not to let this happen again.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;意訳&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;正しいタイミングで。できるだけ早いほうがいいが焦る必要はない。内容を準備してからでいい。&lt;/li&gt;
&lt;li&gt;賢くコミュニケーションを選ぶこと。謝罪の方法はたくさんある。直接でも、電話でも手紙でも。ただ、相手を深く傷付けてしまったのなら手紙がいいかもしれない。&lt;/li&gt;
&lt;li&gt;言い訳をしないこと。失礼になる。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;客が正しい&amp;rdquo;という原則がある。多くの場合誤って責任を負ったほうがよい。&lt;/li&gt;
&lt;li&gt;再現させないこと。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-4-situation-questions:a0f532c54eaaef29017b9735517d5d9f&#34;&gt;◯ Practice 4 | Situation Questions&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Your company sent the customer goods that he purchased but he never got them. What do you do?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll write a letter to him.
On the letter I tell him that the apologies for our mistake and we&amp;rsquo;ll send new one with bounus.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;覚えた英単語:a0f532c54eaaef29017b9735517d5d9f&#34;&gt;◯ 覚えた英単語&lt;/h5&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;単語&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;その他&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;inconvenience&lt;/td&gt;
&lt;td&gt;不便&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;pride A&lt;/td&gt;
&lt;td&gt;Aを誇りにする&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;terribly&lt;/td&gt;
&lt;td&gt;ひどく、非常に&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;impulsive&lt;/td&gt;
&lt;td&gt;衝動的な、はずみで&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;excuses&lt;/td&gt;
&lt;td&gt;理由、言い訳&lt;/td&gt;
&lt;td&gt;excuse me&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;principle&lt;/td&gt;
&lt;td&gt;原則、主義&lt;/td&gt;
&lt;td&gt;a moral rule&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;faithfully&lt;/td&gt;
&lt;td&gt;忠実に&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;impolite&lt;/td&gt;
&lt;td&gt;失礼な&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;blame A for B&lt;/td&gt;
&lt;td&gt;Bを理由にAを咎める&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;She had always prided herself on her appearance.&lt;/li&gt;
&lt;li&gt;He had supported the local team faithfully for 30 years.&lt;/li&gt;
&lt;li&gt;Some people think it is impolite to ask someone&amp;rsquo;s age.&lt;/li&gt;
&lt;li&gt;I refuse to lie about it; it&amp;rsquo;s against my principles.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;その他聞きたかったこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;あなたなら何て答える？&lt;/li&gt;
&lt;li&gt;電波が悪い&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>【DMM英会話】Self-Introduction|Business Basic</title>
      <link>http://kotazi.github.io/blog/post/2016/0103_dmm/</link>
      <pubDate>Sun, 03 Jan 2016 16:41:09 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0103_dmm/</guid>
      <description>

&lt;p&gt;DMM英会話のレッスン中。その日学んだことをメモ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eikaiwa.dmm.com/download/pdf/Business_basic_01_01.pdf/&#34;&gt;Lesson 01: Self-Introduction|Business Basic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5 id=&#34;practice-1-formal-and-informal-expressions:3b6611648246b99f3a027a826155f0a9&#34;&gt;◯ Practice 1 | Formal and Informal Expressions&lt;/h5&gt;

&lt;p&gt;割愛。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-2-reading-sentences:3b6611648246b99f3a027a826155f0a9&#34;&gt;◯ Practice 2 | Reading Sentences&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;What type of language is used in each of the two examples? Formal or informal?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;In introduction 1 is formal, and introduction 2 is informal.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;How is Patrick Clover trying to build rapport with the person he addresses himself to in the first introduction?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;To build rapport he tried to find something in common.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;What major difference between the contents of the two introductions do you recognize?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;In introduction 1 he explained about his business, but in 2 is about his personal info.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;What can you tell us about the structure of the two introductions?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Introduction 1 is polite. 2 is rough.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-3-studying-the-manual:3b6611648246b99f3a027a826155f0a9&#34;&gt;◯ Practice 3 | Studying the Manual&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;A connection with the listeners: &amp;ldquo;Good morning, ladies and gentlemen/Hello, Mr. Jameson, I am&amp;hellip; ”&lt;/li&gt;
&lt;li&gt;If possible, before saying your name it is a very good idea to mention the name of the person you are introducing yourself to. This creates a connection and keeps the listener’s attention.&lt;/li&gt;
&lt;li&gt;Several issues that will vary depending on your audience (For example, if you have different businesses, you need to prepare at least one introduction for each).&lt;/li&gt;
&lt;li&gt;A strong belief in what you are saying. It is best to stay true to yourself and mention the things that you really enjoy instead of lying about something. Happiness attracts happiness.&lt;/li&gt;
&lt;li&gt;Keywords. You should include keywords such as your experience, your company’s name, your position in the company, etc.&lt;/li&gt;
&lt;li&gt;Time for response. You should be very attentive while talking and let people ask you questions if they have any.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
&lt;strong&gt;意訳&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Good morning, ladies and gentlemen/Hello, Mr. Jameson, I am&amp;hellip; ” などから始める&lt;/li&gt;
&lt;li&gt;可能であれば名乗る前に相手を読んで関係を築く&lt;/li&gt;
&lt;li&gt;いくつかの話題は相手に合わせる&lt;/li&gt;
&lt;li&gt;嘘を付かずに楽しむこと。幸福は幸福を呼ぶ。&lt;/li&gt;
&lt;li&gt;キーワードを用意する。体験や会社名、役職など。&lt;/li&gt;
&lt;li&gt;レスポンス時間。相手の質問には関心を持って答える。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;practice-4-situation-questions:3b6611648246b99f3a027a826155f0a9&#34;&gt;◯ Practice 4 | Situation Questions&lt;/h5&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;You see a person you need to introduce yourself to, but you don’t know his /her name. What do you do?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll ask his/her name before my self introduce.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;You are taking your coffee with you and accidentally spill it on a stranger’s shoes at a business party. What would you do?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;ll buy new one.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;覚えた英単語:3b6611648246b99f3a027a826155f0a9&#34;&gt;◯ 覚えた英単語&lt;/h5&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;単語&lt;/th&gt;
&lt;th&gt;意味&lt;/th&gt;
&lt;th&gt;その他&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;rapport&lt;/td&gt;
&lt;td&gt;良い関係&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;address oneself to A&lt;/td&gt;
&lt;td&gt;Aに取り組む&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;vary&lt;/td&gt;
&lt;td&gt;異なる/さまざま&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;attentive&lt;/td&gt;
&lt;td&gt;注意深い&lt;/td&gt;
&lt;td&gt;careful with interest&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;spill&lt;/td&gt;
&lt;td&gt;こぼす&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr&gt;

&lt;p&gt;普通に英語で自己紹介するときに気をつける点なども学べて、教材としてGood!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【読書】アジャイルサムライを読んで</title>
      <link>http://kotazi.github.io/blog/post/2016/0103_ajail/</link>
      <pubDate>Sun, 03 Jan 2016 12:53:46 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0103_ajail/</guid>
      <description>

&lt;p&gt;&lt;a rel=&#34;nofollow&#34; href=&#34;http://www.amazon.co.jp/gp/product/4274068560/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4274068560&amp;linkCode=as2&amp;tag=kotazi-22&#34;&gt;アジャイルサムライ−達人開発者への道−&lt;/a&gt;&lt;img src=&#34;http://ir-jp.amazon-adsystem.com/e/ir?t=kotazi-22&amp;l=as2&amp;o=9&amp;a=4274068560&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;を読んだ。その感想や学んだこと。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Ⅰ部とⅡ部については別記事でまとめました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./../../20151227_ajail&#34;&gt;【第Ⅰ部】「アジャイル」入門/アジャイルサムライ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./../../20151228_ajail&#34;&gt;【第Ⅱ部】アジャイルな方向づけ/アジャイルサムライ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&#34;第ⅲ部-アジャイルな計画づくり:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;第Ⅲ部 アジャイルな計画づくり&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ユーザーストーリーを作成する&lt;/li&gt;
&lt;li&gt;INVEST: 「Independent/Negotiable/Valuable/Estimatable/Small/Testable」&lt;/li&gt;
&lt;li&gt;ポイントで見積もるのは再調整する作業がいつまでも終わらなくなる状況に陥るのを防ぐため&lt;/li&gt;
&lt;li&gt;アジャイルな計画ができれば、プロジェクト計画は常に最新であることが分かるようになる&lt;/li&gt;
&lt;li&gt;アジャイルな計画づくりとは、チームの開発速度を計測して、その速度を元にプロジェクトの完了時期を見通せるようにすること&lt;/li&gt;
&lt;li&gt;プロジェクトでこなすべきTODOリストを「マスターストーリーリスト」と呼ぶ&lt;/li&gt;
&lt;li&gt;チームがユーザーストーリーを動くソフトウェアに変換する速度を「ベロシティ」と呼ぶ&lt;/li&gt;
&lt;li&gt;アジャイルでは最初に立てた計画にはいつまでもこだわらない。計画の方を変える(普通はスコープを調整)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;予めスコープを柔軟にしておくことが計画を誠実に保つ秘訣&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;「最後は良くなりますように」というのは、「奇跡によるマネジメント」という有名なマネジメント手法&lt;/li&gt;
&lt;li&gt;リリースの単位をMMF(Minimal Marketable Feature Set)と呼ぶ&lt;/li&gt;
&lt;li&gt;ベロシティはチームで測る。個人の生産性を測るのは悪い方向へ転ぶ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;バーンダウンチャートを利用することで可視化できる4つ:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;◯ バーンダウンチャートを利用することで可視化できる4つ&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;どれだけの仕事を完成させたのか&lt;/li&gt;
&lt;li&gt;どれだけの仕事が残っているのか&lt;/li&gt;
&lt;li&gt;チームのベロシティ&lt;/li&gt;
&lt;li&gt;いつごろ全てを完了させられそうか&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;プロジェクトを途中からアジャイルにする前に-チームメンバーが応えられるべき5つの質問:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;◯ プロジェクトを途中からアジャイルにする前に、チームメンバーが応えられるべき5つの質問&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;このプロジェクトにいるのは何故？&lt;/li&gt;
&lt;li&gt;成し遂げようとしていることは何？&lt;/li&gt;
&lt;li&gt;顧客は誰？&lt;/li&gt;
&lt;li&gt;解決すべき主要な課題は何？&lt;/li&gt;
&lt;li&gt;最終判断を下すのは誰？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;アジャイルな見積もりについて。ベロシティやバーンダウンチャートという考え方を使ってチームの生産性やゴールまでの距離を明確にする。アジャイルにとって重要なことのひとつは誠実であり、明確であること。チームメンバー一人一人が自分たちのゴールやゴールまでの距離を知れるような手引をしたり、環境を整えたりすることがアジャイルなチームを作る上で重要。&lt;/p&gt;

&lt;h2 id=&#34;ⅳ部-アジャイルなプロジェクト運営:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;Ⅳ部 アジャイルなプロジェクト運営&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;何もかもを文書にまとめる時間はない&lt;/li&gt;
&lt;li&gt;開発プラクティスをしっかりと根付かせる&lt;/li&gt;
&lt;li&gt;テストは開発と一緒になって進める&lt;/li&gt;
&lt;li&gt;そのために必要なことが3つ

&lt;ul&gt;
&lt;li&gt;分析して設計する(作業の段取りをする)&lt;/li&gt;
&lt;li&gt;開発する(実際に作業する)&lt;/li&gt;
&lt;li&gt;テストする(作業の結果を確認する)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;アジャイルな意思疎通の作戦:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;◯ アジャイルな意思疎通の作戦&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;開発チームは同じ職場に集まって作業して、ちゃんと動くソフトウェアお成果として、目の前の顧客に定期的に見せていく&lt;/li&gt;
&lt;li&gt;「期待をマネジメントすること」「フィードバックを得ること」これはどんなアジャイルプロジェクトでも取り組むべき&lt;/li&gt;
&lt;li&gt;そのためにイテレーションごとに習慣づけるべき4つのミーティング

&lt;ul&gt;
&lt;li&gt;今回のイテレーション作業に備える(ストーリー計画MTG)&lt;/li&gt;
&lt;li&gt;今回のイテレーションのフィードバックを得る(ショーケース)&lt;/li&gt;
&lt;li&gt;次回のイテレーション計画を立てる(イテレーション計画MTG)&lt;/li&gt;
&lt;li&gt;次回のイテレーションで改善できる余地を探す(ミニ振り返り)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;そして自分たちにあったものを選ぶことが大事&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;現場の状況を目に見えるようにする:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;◯ 現場の状況を目に見えるようにする&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;「現場の状況を目に見えるようにするための貼りもの」おすすめ4つ

&lt;ul&gt;
&lt;li&gt;ストーリーボード&lt;/li&gt;
&lt;li&gt;リリースボード&lt;/li&gt;
&lt;li&gt;ベロシティとバーンダウンチャート&lt;/li&gt;
&lt;li&gt;インセプションデッキ　四天王&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;第ⅴ部-アジャイルなプログラミング:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;第Ⅴ部 アジャイルなプログラミング&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ユニットテスト: ビルドしたコードがちゃんと動くことを示す方法&lt;/li&gt;
&lt;li&gt;リファクタリング: コードをシンプルでクリーンな状態に保ち、読みやすくするための技術&lt;/li&gt;
&lt;li&gt;テスト駆動開発: 複雑さに立ち向かうための設計方法&lt;/li&gt;
&lt;li&gt;継続的インテグレーション: 決まった感覚で全てを統合し、プロダクトをリリース可能な状態を保ちつづける取り組み&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このあたりはできていると思った。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;感想:2d010f97a8f7d5793839b938d1f6cf2a&#34;&gt;感想&lt;/h2&gt;

&lt;p&gt;ずっとアジャイルに興味を持ち、中途半端に取り組んできた。
ようやくこの本を読んでアジャイルを俯瞰的に見て、「アジャイルとは何か？」という問いに答えられるようになった。
アジャイルとは顧客に価値のあるソフトウェアと提供するための開発手法群であり、本書ではその様々な手法と具体的なケースに沿った手法の使い方を学べた。&lt;/p&gt;

&lt;p&gt;最適な開発手法が存在するわけではなく、自分たちのチームにあった最適なプラクティスを見つけ出し実践することこそがアジャイルである。
けれども根底には「顧客に価値のあるソフトウェアを提供し続ける」という目的があり、チームでそれは共通認識として持っておくべきだろう。(そのためのストーリーボードやインセプションデッキがある)&lt;/p&gt;

&lt;p&gt;また、具体的なアジャイルによる開発手法(リファクタやユニットテストのこと)を読んでいて、案外今のチームでもできていると感じた。&lt;/p&gt;

&lt;p&gt;現状の組織からアジャイルなチーム体制を作っていくには下記が必要&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクトごとにチームを作成すること&lt;/li&gt;
&lt;li&gt;プロジェクトのゴールを設定すること&lt;/li&gt;
&lt;li&gt;プロジェクトの最終判断を下す人間を決めること&lt;/li&gt;
&lt;li&gt;(時間/予算/品質/スコープ)を確認すること&lt;/li&gt;
&lt;li&gt;スコープは柔軟にすること&lt;/li&gt;
&lt;li&gt;インセプションデッキでチームの期待をマネジメントすること&lt;/li&gt;
&lt;li&gt;関係者全員でよく話し合い、状況に応じてチームで適切な判断を下せるようにすること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そんな感じで2016年はよりよい組織を作り、より良いサービスを生む。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【訳読】Datatablesの初期化エラー</title>
      <link>http://kotazi.github.io/blog/post/20151229_datatables/</link>
      <pubDate>Sat, 02 Jan 2016 17:58:27 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151229_datatables/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://datatables.net/manual/tech-notes/3&#34;&gt;http://datatables.net/manual/tech-notes/3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Datatablesのエラー訳してみた。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;DataTablesではテーブルをカスタマイズする広範囲のオプションを初期化時に設定することができます。これは初期化の時のみなので、それ以降にこのようなオプションを設定しようとするとエラーが出てしまいます。&lt;/p&gt;

&lt;h3 id=&#34;意義:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;意義&lt;/h3&gt;

&lt;p&gt;単純に、DataTablesでは初期化時に設定したオプションを後から変更することができないということです。どんな操作をしたとしても、既に&lt;a href=&#34;http://datatables.net/reference/api&#34;&gt;API&lt;/a&gt;を通して初期化されてしまった後ではエラーが発生します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DataTables warning: table id={id} - Cannot reinitialise DataTable.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;{id}&lt;/code&gt;の部分はエラーを引き起こしたDOMのidで置き換えられます。&lt;/p&gt;

&lt;h3 id=&#34;分析:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;分析&lt;/h3&gt;

&lt;p&gt;このエラーはDataTablesが選択したノードにおいて既に初期化している際に、DataTablesのコンストラクタオブジェクトを呼び出すと発生しいます。下記がサンプルになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;#example&#39;).dataTable( {
    paging: false
} );
 
 
$(&#39;#example&#39;).dataTable( {
    searching: false
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;#example&lt;/code&gt;は既にDataTableとして初期化されているので、2つ目のコードブロックが実行されるときにエラーが発生します。&lt;/p&gt;

&lt;h3 id=&#34;解法:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;解法&lt;/h3&gt;

&lt;p&gt;このエラーを再現するにはいくつかの方法があります。なのでこのイシューを解決するためにいくつかの方法が使われます。&lt;/p&gt;

&lt;h4 id=&#34;シングル初期化:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;シングル初期化&lt;/h4&gt;

&lt;p&gt;複数のDataTablesの初期化を行いたいのであれば、単に同じものを設定してください。サンプルでは、ページングと検索を消しました。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;#example&#39;).dataTable( {
    paging: false,
    searching: false
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;より詳しく知るためには、&lt;a href=&#34;initialisation options manual&#34;&gt;こちら&lt;/a&gt;のマニュアルを参考にしてください。&lt;/p&gt;

&lt;h4 id=&#34;オブジェクトインスタンス検索:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;オブジェクトインスタンス検索&lt;/h4&gt;

&lt;p&gt;APIを通してDataTableの活動の参照を得ようとた時にこのエラーはしばしば起こります。
例えば、もしあなたがDataTableインスタンスを作成する関数を持っていたとしましょう。これに変更を加えようとするとエラーが出てしまいます。
この要な場合、&lt;code&gt;$.fn.dataTable.isDataTable()&lt;/code&gt;を利用して、DataTableが既に存在するか確認しましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if ( $.fn.dataTable.isDataTable( &#39;#example&#39; ) ) {
    table = $(&#39;#example&#39;).DataTable();
}
else {
    table = $(&#39;#example&#39;).DataTable( {
        paging: false
    } );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;retrieve:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;retrieve&lt;/h4&gt;

&lt;p&gt;上記サンプルのコートは魅力的ではありません。&lt;code&gt;retrieve&lt;/code&gt;オプションを使って、DataTablesにあなたが初期化後にオプションを変更できないことを知っていると伝えましょう。
このオプションは&lt;code&gt;$.fn.dataTable.isDataTable()&lt;/code&gt;によるチェックよりショートカットになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;table = $(&#39;#example&#39;).DataTable( {
    retrieve: true,
    paging: false
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;destroy:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;destroy&lt;/h4&gt;

&lt;p&gt;本当にオプション設定を変更したい場合もあるでしょう。少し特殊な方法を取ることで解決できます。
古いDatatablesを破壊して新しい物を作るのです。なるべく避けたほうがいいかもしれません。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;table = $(&#39;#example&#39;).DataTable( {
    paging: false
} );
 
table.destroy();
 
table = $(&#39;#example&#39;).DataTable( {
    searching: false
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このサンプルでは、2つめの初期化によって&lt;code&gt;paging&lt;/code&gt;オプションの設定がなくなっていることに注意してください。&lt;/p&gt;

&lt;p&gt;ショートカットとして、&lt;code&gt;destory&lt;/code&gt;オプションが存在しいます。このオプションで既存のDataTableを槊杖することができます。
下記のように使用してください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;#example&#39;).DataTable( {
    paging: false
} );
 
$(&#39;#example&#39;).DataTable( {
    destroy: true,
    searching: false
} );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;retrieve&lt;/code&gt;オプションと&lt;code&gt;destroy&lt;/code&gt;オプションは相容れないので一緒に使用することはできません。&lt;/p&gt;

&lt;h4 id=&#34;reason:f6b344828f1ff5de137281b6efc1cbd7&#34;&gt;Reason&lt;/h4&gt;

&lt;p&gt;初期化後にDataTablesの初期設定を変更することができない理由は、その設定を元にしたコートが多すぎるためです。(例えば、スクロールのオンオフなどは複雑過ぎます。)
その結果、DataTablesのコアコードをキープしたままにするのは利用可能ではなくなっています。注意点として、&lt;code&gt;destroy&lt;/code&gt;オプションを使ってもperformanceへの影響はありません。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第Ⅱ部】アジャイルな方向づけ/アジャイルサムライ</title>
      <link>http://kotazi.github.io/blog/post/20151228_ajail/</link>
      <pubDate>Mon, 28 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151228_ajail/</guid>
      <description>

&lt;h2 id=&#34;3-みんなをバスに乗せる:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;3. みんなをバスに乗せる&lt;/h2&gt;

&lt;h5 id=&#34;スタートする前からダメになるプロジェクト:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;◯ スタートする前からダメになるプロジェクト&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;答えるべき問に答えれらない&lt;/li&gt;
&lt;li&gt;手強い質問をする勇気を持てない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プロジェクトに対する期待をマネジメントするための優れたツールがインセプションデッキ。聞かなきゃいけない10の課題で構成されている。&lt;/p&gt;

&lt;p&gt;チームメンバーがいないところで合意したことを全体にしているから、プロジェクトはだめになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ゴールやビジョン、プロジェクトの状況や背景についてチームで話し合っておくこと。チームで適切な判断を下せるように&lt;/li&gt;
&lt;li&gt;ステークホルダーに情報を提供すること。彼らにはプロジェクトを続けるかどうかを決断する材料が必要。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インセプションデッキの背後にある考え方は、「しかるべき人をみんな同じ部屋に集めて、プロジェクトにまつわる適切な質問をすれば、自分たちのプロジェクトに対する期待を共有して、認識を合わせることができるはずだ」である。このプロジェクトは何であって何でないのか、価値を届けるためにはどこで力を注ぐべきか。&lt;/p&gt;

&lt;h5 id=&#34;インセプションデッキ一覧:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;◯ インセプションデッキ一覧&lt;/h5&gt;

&lt;p&gt;1.我々は何故ここにいるのか&lt;br /&gt;
2.エレベーターピッチを作る =&amp;gt; 2センテンスで説明する&lt;br /&gt;
3.やらないことリストを作る&lt;br /&gt;
4.「ご近所さん」を探せ =&amp;gt; 関係者は思ったよりいるもの&lt;br /&gt;
5.解決策を描く&lt;br /&gt;
6.パッケージデザインを作る&lt;br /&gt;
7.夜も眠れなくなるような問題は何だろう&lt;br /&gt;
8.期間を見極める&lt;br /&gt;
9.何を諦めるかをはっきりさせる&lt;br /&gt;
10.何がどれだけ必要なのか&lt;/p&gt;

&lt;h2 id=&#34;4-全体像を捉える:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;4. 全体像を捉える&lt;/h2&gt;

&lt;p&gt;このプロジェクトの成功には何が必要なのかをハッキリ説明する。「皆さんに積極的にかかわっていただく必要があります。当事者意識を持っていただいたうえで、さまざまなお約束をしていただかなければならない。」&lt;/p&gt;

&lt;h2 id=&#34;5-具現化させる:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;5. 具現化させる&lt;/h2&gt;

&lt;p&gt;リスクを話し合うことはいいことだ。&lt;/p&gt;

&lt;h5 id=&#34;何を諦めるのかをはっきりさせる:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;◯ 何を諦めるのかをはっきりさせる&lt;/h5&gt;

&lt;p&gt;プロジェクトの四天王
- 時間
- 予算
- 品質
- スコープ &amp;lt;= 諦めるとしたらこいつに限る&lt;/p&gt;

&lt;h5 id=&#34;インセプションデッキから学んだこと:06ad9abec4a4fcb7f0380841015fdfb4&#34;&gt;◯ インセプションデッキから学んだこと&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;プロジェクトの最初に手強い質問をすることの重要性&lt;/li&gt;
&lt;li&gt;プロジェクトが始まる前にみんなの向かう先を揃える&lt;/li&gt;
&lt;li&gt;プロジェクトの契約までのスコープ設定や計画に何ヶ月もかける必要がない&lt;/li&gt;
&lt;li&gt;インセプションデッキを使えば数日で期待のマネジメントが可能&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;インセプションデッキを通して事前準備の重要性を感じた。&lt;br /&gt;
インセプションデッキ課題にあることを不明確なままにプロジェクトを進めたしまった場合に、
のちのち躓いてしまった時に取り返しがつかなくなることが容易に想像できる。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第Ⅰ部】「アジャイル」入門/アジャイルサムライ</title>
      <link>http://kotazi.github.io/blog/post/20151227_ajail/</link>
      <pubDate>Sun, 27 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151227_ajail/</guid>
      <description>

&lt;h2 id=&#34;1-ざっくり分かるアジャイル開発:4e2844be10cbbdf0317c35d3b6d2835b&#34;&gt;1. ざっくり分かるアジャイル開発&lt;/h2&gt;

&lt;p&gt;1.大きな問題は小さくする&lt;br /&gt;
2.本当に大事なことに集中して、それ以外のことは忘れる&lt;br /&gt;
3.ちゃんと動くソフトウェアを届ける&lt;br /&gt;
4.フィードバックを求める&lt;br /&gt;
5.必要とあれば進路を変える&lt;br /&gt;
6.成果責任を果たす&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;仕事の質に責任を持たなければならない&lt;/li&gt;
&lt;li&gt;スケジュールを守らなければならない&lt;/li&gt;
&lt;li&gt;お客さんの期待をマネジメントしなければならない&lt;/li&gt;
&lt;li&gt;身銭を切るかのような覚悟でお客さんの資金を扱えわなければならない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;アジャイル開発では、「マスターストーリーリスト」がプロジェクトのTodoリスト。&lt;/strong&gt;(featureの記述レベルは概要が分かれば十分。)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;具体的に成果を上げていくためのエンジンとなるのがイテレーション。&lt;/strong&gt;イテレーションの長さは1〜2習慣にする。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ベロシティ(1回のイテレーションで完了させられるストーリーの量)を実調することで、自分たちのこなせる仕事量を把握できる。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;アジャイル手法では奇跡は必要なくなる。なぜなら顧客に隠し立てせずに誠実に仕事を進めるから。&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&#34;アジャイル手法:4e2844be10cbbdf0317c35d3b6d2835b&#34;&gt;◯ アジャイル手法&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;スクラム: アジャイルプロジェクトを包んで、プロジェクトマネジメントの装いを与えてくれる運営手法&lt;/li&gt;
&lt;li&gt;エクストリーム・プログラミング: どんなアジャイルプロジェクトにも欠かせないソフトウェア開発のプラクティスを規律正しく実践する手法&lt;/li&gt;
&lt;li&gt;リーン: 能率を上げることをとことん追い求める。たゆまぬ改善を続ける企業のためのトヨタ生産方式&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-アジャイルチームのご紹介:4e2844be10cbbdf0317c35d3b6d2835b&#34;&gt;2. アジャイルチームのご紹介&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;典型的なアジャイルチームには、予め決まった役割分担が存在しない。チームが一丸となって成果責任を果たすという考え方をとても重要視する。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;「チームの生産性を劇的に改善できる方法をひとつだけ挙げろ」と聞かれたら、間違いなくそれは、全員が同じ仕事場に集まって働くこと。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;同じ場所で働けないなら、プロジェクトの予算に全員分の旅費を予算に入れる。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;顧客はチームのコアメンバーであり、スクラムではプロダクトオーナーという専任の役割を与える。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;チームビルドをうまくするためには、役割に人を合わせるのではなく、人に合わせて役割分担を決める。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;アジャイルなプロジェクトマネージャはプロジェクトを成功させる唯一の方法は開発チームを成功させることだと心得ている。
優れたPMの条件は一週間いなくなっても業務に支障が出ないようにできること。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;アジャイルの用語や基本的な考え方。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ドラッカーから考えるプロダクトマネジャーの仕事</title>
      <link>http://kotazi.github.io/blog/post/20151224_management/</link>
      <pubDate>Fri, 25 Dec 2015 16:38:36 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151224_management/</guid>
      <description>&lt;p&gt;この記事は&lt;a href=&#34;http://qiita.com/advent-calendar/2015/productmanager&#34;&gt;Product Manager Advent Calendar 2015&lt;/a&gt;の25日目の記事です。&lt;/p&gt;

&lt;p&gt;こんにちは、kotazi(コタジ)です。&lt;br /&gt;
Shuttlerock Japanに入社して1年が経ちました。普段はエンジニアをしていますが、組織の抱える課題に対し、エンジニア的アプローチでは解決できないものもあると感じ、「マネジメント〜基本と原則〜」をkindleで購入しました。&lt;/p&gt;

&lt;p&gt;その時のメモ書きを公開します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/2015112001/&#34;&gt;【第1章】企業の成果/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/2015112301/&#34;&gt;【第2章】公的機関の成果/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151202/&#34;&gt;【第3章】仕事と人間/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151208_management/&#34;&gt;【第4章】社会的責任/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151209_management/&#34;&gt;【第5章】マネジャー/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151214_management//&#34;&gt;【第6章】マネジメントの技能/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151221_managemant/&#34;&gt;【第7章】マネジメントの組織/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151223_management//&#34;&gt;【第8章】トップマネジメント/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kotazi.github.io/blog/post/20151224_management2/&#34;&gt;【第9章】マネジメントの戦略/基本と原則&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;ドラッカーの基本と原則の中でマネジャーは「組織の成果に責任を持つ者」として定義されています。
またマネジャーには２つの役割があり、「投入した資源の総和よりも大きなものを生み出す生産体を創造すること」、「決定と行動において、ただちに必要とされているものと遠い将来に必要とされているものを調和させていくこと」です。&lt;/p&gt;

&lt;p&gt;こういったマネジメントの基本と原則についての考えは、プロダクトマネジメントやプロダクトマネジャーの仕事をしていくうえで応用ができるはずです。&lt;/p&gt;

&lt;p&gt;マネジメントの役割も下記のように述べられています。&lt;/p&gt;

&lt;p&gt;1.組織本来の使命を果たすべくマネジメントすること&lt;br /&gt;
2.生産的な仕事を通じて人に成果を上げさせること&lt;br /&gt;
3.社会と個人に生活の質を提供すること&lt;/p&gt;

&lt;p&gt;チーム本来の使命を再確認し、個々の働きがいや自己実現と真摯に向き合い、顧客により良いものを提供できるようなプロダクトマネジメントを行い、それに対し責任を持って成果で応えられるようなプロダクトマネジャーを目指してみてはいかがでしょうか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第9章】マネジメントの戦略/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151224_management2/</link>
      <pubDate>Thu, 24 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151224_management2/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;40-規模のマネジメント:a260f3eda151c06ad855e57e5a7891af&#34;&gt;40. 規模のマネジメント&lt;/h2&gt;

&lt;p&gt;規模は戦略に影響をおよぼす。また戦略も規模に影響をおよぼす。
適切な規模を知るためには、従業員数、売上高、付加価値、製品、市場、技術、産業構造を見なければならない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;小企業のマネジメント&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;小企業は戦略を必要とする。&lt;/p&gt;

&lt;p&gt;① 「われわれの事業は何か。何であるべきか。」に答える&lt;br /&gt;
② トップマネジメントの役割を組織化する&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;中企業のマネジメント&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;多くの点で理想的な規模。マネジメントが最も容易になる。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大企業のマネジメント&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;人間を個人的に知ることができない。フォーマルな組織構造を適切に創りあげなければならない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;規模が不適切だった場合&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① 事業の性格を変える&lt;br /&gt;
② 合併と買収&lt;br /&gt;
③ 売却、切り捨て、縮小&lt;/p&gt;

&lt;p&gt;また、規模についての問題は組織の内部ではなく、マネジメントの限界でもない。
地域社会に対して大きくなりすぎることにある。&lt;/p&gt;

&lt;h2 id=&#34;41-多角化のマネジメント:a260f3eda151c06ad855e57e5a7891af&#34;&gt;41. 多角化のマネジメント&lt;/h2&gt;

&lt;p&gt;多角化に成功する条件は、市場、技術、価値観の一致。&lt;br /&gt;
何かがうまくいかなくなると、全てが上手くいかなくなる。&lt;/p&gt;

&lt;h2 id=&#34;42-グローバル化のマネジメント:a260f3eda151c06ad855e57e5a7891af&#34;&gt;42. グローバル化のマネジメント&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;グローバル企業の出現は、今日自明とされている教義、すなわち国家が人間組織の自然単位であるとする教義と相容れないだけでない。それは、あらゆる組織が、究極的には国民国家の統治機関たる政府からその存在の法的基礎と合法性を得なければならないとする教義とも相容れない。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;グローバル企業は、今日最も重要な経済的存在である。それは、グローバル経済という新しい現実を反映した存在であるがゆえに重要である。資源の最適化のもっとも有効な機関であるがゆえに重要である。&lt;/p&gt;

&lt;h2 id=&#34;43-成長のマネジメント:a260f3eda151c06ad855e57e5a7891af&#34;&gt;43. 成長のマネジメント&lt;/h2&gt;

&lt;p&gt;成長は自動的には起こらない。事業の成功によって、自動的にもたらされるものではない。成長は不連続である。成長のためにはある段階で自らを変えなければならない。
成長には戦略が必要である、準備が必要である。なりたいと思うことに焦点を合わせた行動が必要である。トップに変革の意識がなければ、いずれも無駄になる。&lt;/p&gt;

&lt;p&gt;長期に渡る高度の成長は不可能であり、不健全である。あまりに急速な成長は組織を脆弱化する。マネジメントを不可能にする。緊張、弱点、欠陥をもたらす。
成長そのものを目標にすることはまちがいである、大きくなる事自体に価値はない。よい企業になることが正しい目標である。成長そのものは虚栄でしか無い。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;成長への準備&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;成長の機会はいつ起きるか分からない。準備が必要である。準備ができていなければ機会を逃すことになる。&lt;/p&gt;

&lt;p&gt;① 基本活動を明らかにし、それらの活動に取り組むべきトップマネジメントチームを編成する&lt;br /&gt;
② 変化すべき時を知るために、方針と行動の変化を要求する兆候に注意する&lt;br /&gt;
③ 心底変化を望んでいるかを正直に判断する&lt;/p&gt;

&lt;h2 id=&#34;44-イノベーション:a260f3eda151c06ad855e57e5a7891af&#34;&gt;44. イノベーション&lt;/h2&gt;

&lt;p&gt;これからのイノベーションは19世紀のそれとは著しく異なり、既存の組織において行わなければならない。企業や公的機関は、既存のもののためだけではなく、イノベーションのために自らを組織する能力が必要。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;イノベーションを行う組織の特徴&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① イノベーションの意味を知っている&lt;br /&gt;
② イノベーションの力学を知っている&lt;br /&gt;
③ イノベーションの戦略を持っている&lt;br /&gt;
④ 管理的な目標や基準とは別に、イノベーションのための目標と基準の必要を知っている&lt;br /&gt;
⑤ マネジメント、特にトップマネジメントの果たす役割と姿勢が違う&lt;br /&gt;
⑥ イノベーションのための活動を、管理的な活動のための組織から独立して組織している。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;イノベーションは常に市場に焦点を合わせなければならない&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;トップマネジメントたるものは、アイディアを正面からとりあげることを自らの職務としなければならない。優れたアイディアとは常に非現実的であることをしらなければならない。優れたアイディアを手にするには、多くの馬鹿げたアイディアが必要であり、両者を簡単に識別する手立てのないことを知らなければならない。いずれも、実現性のない馬鹿げたものに見え、同時に素晴らしい物にも見える。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;イノベーションのための仕事は、独立した部門に任せなければならない。イノベーションは、機能としてではなく、事業として組織する必要がある。新しいことに取り組むことが決定したならば、直ちにプロジェクト・マネジャーを任命しなければならない。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;45-マネジメントの正当性:a260f3eda151c06ad855e57e5a7891af&#34;&gt;45. マネジメントの正当性&lt;/h2&gt;

&lt;p&gt;われわれの社会は組織社会になった。現代社会の主な課題はすべて組織によって遂行されている。しかも、ほとんどの人が組織で働いている。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;マネジメントの役割&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① 組織本来の使命を果たすべくマネジメントすること&lt;br /&gt;
② 生産的な仕事を通じて人に成果を上げさせること&lt;br /&gt;
③ 社会と個人に生活の質を提供すること&lt;/p&gt;

&lt;h2 id=&#34;結論:a260f3eda151c06ad855e57e5a7891af&#34;&gt;結論&lt;/h2&gt;

&lt;p&gt;社会においてリーダー的な階層にあるということは、本来の機能を果たすだけでは済まされないということである。本来の成果を上げるだけでは不十分である、正当性が要求される。社会から正しいものとしてその存在を是認させなければならない。&lt;/p&gt;

&lt;p&gt;正当性は曖昧なコンセプトであり厳密に定義することはできないが決定的に重要。
社会のリーダー的階層としてのマネジメントは、自らの組織に与えられた機能を遂行するための権限を持たなければならない。
マネジメントは成果をあげるためにその地位にあるが、成果をあげるだけでは彼らの権限は正統とはされない。&lt;/p&gt;

&lt;p&gt;社会のニーズを事業上の機会に転換することが企業の役割である。市場と個人のニーズ、すなわち消費者と従業員のニーズについて、予期し、識別子、満足させることは、マネジメントの役割である。&lt;/p&gt;

&lt;p&gt;組織なるものの本質に基盤を置く正当性の根拠は、人の強みを生産的なものにすることしかない。そしてこれが組織の目的である。
組織とは、個としての人間一人ひとりに対して、また社会を構成する一人ひとりの人間に対して、何らかの貢献を行わせ、自己実現させるための手段である。&lt;/p&gt;

&lt;p&gt;社会的な目的を達成するための手段としての組織の発明は、人類の歴史にとって一万年前の労働の文化に匹敵する重要さを持つ。組織の基礎となる原理は、「私的な悪徳は社会のためになる」ではない。「個人の強みは社会のためになる」である。これがマネジメントの正当性の根拠である。そして、マネジメントの権限の基盤となりうる理念的原理である。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;成長とイノベーション。昨今ベンチャー盛り上げていくつもりなら成長とイノベーションが何たるかについては知っておきたい。
また、「大きくなる事自体に価値はない。良い企業になることが正しい目標である。」というのが、最近読んだB Labについての記事と似通って物があって面白かった。
本来企業とは、世界をより良くするために競い合うべきなのである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://greenz.jp/2015/12/20/b-lab/&#34;&gt;「企業」の在り方を再定義する。NPOでも株式会社でもない、新しい法人格普及に取り組む米国非営利法人「B Lab」インタビュー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;マネジメントの役割についても理解することができ、社会のニーズを事業機会に転換できるような企業にしたい。
またその組織で働く人達が個々の強みを活かしながらイキイキと働けるような環境を作り、社会に還元していきたいものだ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第8章】トップマネジメント/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151223_management/</link>
      <pubDate>Wed, 23 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151223_management/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;36-ドイツ銀行物語:9a8745a1df3f4499c388b5fb47d7dff9&#34;&gt;36. ドイツ銀行物語&lt;/h2&gt;

&lt;p&gt;トップマネジメントを確立したのは、ゲオルグ・シーメンス。
ドイツ銀行を最強の金融機関にした。&lt;/p&gt;

&lt;p&gt;① トップマネジメントは、事業全体を見ることができ、全体を考えた意思決定を行えるもののみが果たしうる課題&lt;br /&gt;
② トップマネジメントには独自の構造が必要&lt;br /&gt;
③ トップマネジメントには独自のインプット機関が必要&lt;/p&gt;

&lt;h2 id=&#34;37-トップマネジメントの役割:9a8745a1df3f4499c388b5fb47d7dff9&#34;&gt;37. トップマネジメントの役割&lt;/h2&gt;

&lt;p&gt;① トップマネジメントには事業の目的を考えるという役割&lt;br /&gt;
② 基準を設定する役割、すなわち組織全体の規範を定める役割&lt;br /&gt;
③ 組織を作り上げ、それを維持する役割&lt;br /&gt;
④ トップの座にあるものだけの仕事として、渉外の役割&lt;br /&gt;
⑤ 行事や夕食会への出席など、儀礼的な役割&lt;br /&gt;
⑥ 重大な危機に関しては、自ら出動する役割&lt;/p&gt;

&lt;p&gt;これらを行うために下記の性格が必要。併せ持つヒトは少ない。&lt;br /&gt;
「考える人」、「行動する人」、「人間的な人」、「表に立つ人」。&lt;/p&gt;

&lt;h2 id=&#34;35-トップマネジメントの構造:9a8745a1df3f4499c388b5fb47d7dff9&#34;&gt;35. トップマネジメントの構造&lt;/h2&gt;

&lt;p&gt;トップマネジメントは一人ではなくチームによる仕事。&lt;br /&gt;
要求される役割がさまざまであり、量もおおいため。&lt;/p&gt;

&lt;p&gt;ワンマンにならないために、トップマネジメントのひとつをメンバーに直接的かつ優先的に割り当てるようにする。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;チームワークを機能させるために&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① メンバーはそれぞれの担当分野において最終的な決定権を持つ&lt;br /&gt;
② メンバーは自らの担当する分野以外の意思決定を行ってはならない&lt;br /&gt;
③ 仲良くする必要はない&lt;br /&gt;
④ トップマネジメントは委員会ではない。チームであり、キャプテンがいる。&lt;br /&gt;
⑤ 自らの担当分野では意思決定を行わなければならない。&lt;br /&gt;
⑥ トップマネジメントの仕事は、意思の疎通に精力的に取り組むことを要求する&lt;/p&gt;

&lt;h2 id=&#34;39-取締役会:9a8745a1df3f4499c388b5fb47d7dff9&#34;&gt;39. 取締役会&lt;/h2&gt;

&lt;p&gt;トップマネジメントを監督し、助言し、意思決定を審査する機関。&lt;br /&gt;
あらゆる国にあるがどれも機能を果たしていない。トップマネジメントが完全に支配しているのであれば、消滅すべき。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;取締役会の3つの機能&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;① 審査するための機関
② 成果を上げられないトップマネジメントを交代する
③ 渉外のための機関&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;トップマネジメントについての役割は概ねその通りだと思う。
チームワークを機能させるための条件をメンバー内で共通認識として持たせられるようにしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【AngularJS×InstaAPI】Ohshimagramを作ってみた</title>
      <link>http://kotazi.github.io/blog/post/20151222_ohshima/</link>
      <pubDate>Tue, 22 Dec 2015 17:26:21 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151222_ohshima/</guid>
      <description>

&lt;p&gt;今年のGWの記事。&lt;br /&gt;
ブログを消したのでこの記事だけ復活。&lt;/p&gt;

&lt;h2 id=&#34;概要:c961446d10dc1756ec8ab013192d7a44&#34;&gt;概要&lt;/h2&gt;

&lt;p&gt;InstagramAPIを利用して&lt;code&gt;#伊豆大島&lt;/code&gt;のついたものを引っ張ってくるAngularJSのサービスを作りました。&lt;br /&gt;
今更感が否めないのですが、いくつか改めて勉強し直したいことがあったので。&lt;br /&gt;
実装前に考えたことや、実装しながら学んだことを下記にまとめます。&lt;/p&gt;

&lt;p&gt;ちなみに今回作成したサービスはこちら。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;ohshimagram.kotazi.com&#34;&gt;ohshimagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;はじめに考えたこと:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ はじめに考えたこと&lt;/h3&gt;

&lt;h4 id=&#34;開発期間:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 開発期間&lt;/h4&gt;

&lt;p&gt;&lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;20&lt;/sub&gt;(月)〜4/27(月)の空き時間。と伊豆大島旅行中に締め。&lt;/p&gt;

&lt;h4 id=&#34;実装する機能:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 実装する機能&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Instagram画像の収集をする&lt;/li&gt;
&lt;li&gt;Instagramに認証する&lt;/li&gt;
&lt;li&gt;いいね/コメントをユーザーが行えるようにする&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;使いたいもの-やりたいこと:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 使いたいもの/やりたいこと&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;AngularJS&lt;/li&gt;
&lt;li&gt;&lt;s&gt;ES6&lt;/s&gt; =&amp;gt; 諦めた&lt;/li&gt;
&lt;li&gt;CoffeeScript&lt;/li&gt;
&lt;li&gt;BootStrap&lt;/li&gt;
&lt;li&gt;Gulp&lt;/li&gt;
&lt;li&gt;InstagramAPI&lt;/li&gt;
&lt;li&gt;UI-Router&lt;/li&gt;
&lt;li&gt;&lt;s&gt;JSDoc&lt;/s&gt; =&amp;gt; やめた&lt;/li&gt;
&lt;li&gt;Masonry&lt;/li&gt;
&lt;li&gt;Angular-local-storage&lt;/li&gt;
&lt;li&gt;bootflat&lt;/li&gt;
&lt;li&gt;slim&lt;/li&gt;
&lt;li&gt;$resource&lt;/li&gt;
&lt;li&gt;単体テスト&lt;/li&gt;
&lt;li&gt;&lt;s&gt;E2Eテスト&lt;/s&gt; =&amp;gt; 1割程度&lt;/li&gt;
&lt;li&gt;ngInfiniteScroll&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;意識すること:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 意識すること&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;一週間以内に制作すること&lt;/li&gt;
&lt;li&gt;できたものを公開すること&lt;/li&gt;
&lt;li&gt;テストコードを書くこと&lt;/li&gt;
&lt;li&gt;後に学びをまとめること&lt;/li&gt;
&lt;li&gt;とにかくスピードを重視&lt;/li&gt;
&lt;li&gt;SourceTreeを使わない =&amp;gt; けっこう使った&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;参考にしたいurl:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 参考にしたいURL&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://syncer.jp/instagram-api-matome&#34;&gt;Instagram APIでwebサービスを作りたい全ての人に向けて書きました&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dcrew.jp/ja-instagram-api-doc-v1/index.php/2-uncategorised/2-instagram-api&#34;&gt;Instagram API (日本語訳)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://instagram.com/developer/&#34;&gt;Instagram API &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;実装中のメモ:c961446d10dc1756ec8ab013192d7a44&#34;&gt;実装中のメモ&lt;/h2&gt;

&lt;h3 id=&#34;プロジェクトの作成:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ プロジェクトの作成&lt;/h3&gt;

&lt;h4 id=&#34;プロジェクトを作成する:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ プロジェクトを作成する&lt;/h4&gt;

&lt;p&gt;下記の記事を参考に&lt;code&gt;yoman&lt;/code&gt;のジェネレータを探す。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kinzal.net/post/104245981055/yeoman-angularjs-2014&#34;&gt;yeomanを使ったAngularJSプロジェクトの始め方 2014年版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;gulp&lt;/code&gt;を使用したいので&lt;a href=&#34;https://github.com/Swiip/generator-gulp-angular&#34;&gt;Swiip/generator-gulp-angular&lt;/a&gt;にします。&lt;/p&gt;

&lt;p&gt;ドキュメント通りに&lt;code&gt;yo gulp-angular kyu-maru-gram&lt;/code&gt;としてプロジェクトを作成。&lt;br /&gt;
初期設定はこんな感じ。&lt;a href=&#34;http://slim-lang.com/&#34;&gt;slim&lt;/a&gt;を使ってみたかったのでテンプレートは選ばず。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;? Which version of Angular do you want? 1.3.x (latest)
? Which Angular&#39;s modules would you want to have? (ngRoute and ngResource will be addressed after) angular-animate.js (enable animation features), angular-cookies.js (handle cookie management), angular-touch.js (for mobile development), angular-sanitize.js (to securely parse and manipulate HTML)
? Would you need jQuery or perhaps Zepto? jQuery 2.x (new version, lighter, IE9+)
? Would you like to use a REST resource library? ngResource, the official support for RESTful services
? Would you like to use a router ? UI Router, flexible routing with nested views
? Which UI framework do you want? Bootstrap, the most popular HTML, CSS, and JS framework
? How do you want to implements your Bootstrap components? Angular UI Bootstrap, Bootstrap components written in pure AngularJS by the AngularUI Team
? Which CSS preprocessor do you want? Sass (Node), Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.
? Which JS preprocessor do you want? CoffeeScript, &amp;quot;a little language that compiles into JavaScript&amp;quot;.
? Which html template engine would you want? None, I like to code in standard HTML.
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;コマンドメモ:c961446d10dc1756ec8ab013192d7a44&#34;&gt;◯ コマンドメモ&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gulp serve&lt;/code&gt;: ローカルで起動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp build&lt;/code&gt;: ビルド&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp protractor&lt;/code&gt;: e2eテスト&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gulp test&lt;/code&gt;: 単体テスト&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ディレクトリ構成を考える:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ ディレクトリ構成を考える&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mgechev/angularjs-style-guide/blob/master/README-ja-jp.md&#34;&gt;mgechev/angularjs-style-guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/n0bisuke/items/6a79d3ee63020f771260&#34;&gt;Angular.jsのディレクトリ構成のベストプラクティスを探る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;環境構築:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 環境構築&lt;/h4&gt;

&lt;h5 id=&#34;gitにあげておく:c961446d10dc1756ec8ab013192d7a44&#34;&gt;◯ gitにあげておく&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kotazi/kyu-maru-gram/tree/master&#34;&gt;kotazi/kyu-maru-gram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;slimの導入:c961446d10dc1756ec8ab013192d7a44&#34;&gt;◯ slimの導入&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/gulp-slim&#34;&gt;gulp-slim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;slimをHTMLにコンバートするためのタスクを追加。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;use strict&#39;;

var gulp = require(&amp;quot;gulp&amp;quot;);
var slim = require(&amp;quot;gulp-slim&amp;quot;);

module.exports = function(options) {
  gulp.task(&#39;slim&#39;, function(){
†
  });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これである程度開発環境は整った。&lt;/p&gt;

&lt;h3 id=&#34;ルーティング:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ ルーティング&lt;/h3&gt;

&lt;p&gt;ひとまず&lt;code&gt;/about&lt;/code&gt;/&lt;code&gt;/contact&lt;/code&gt;ページを作ってみることにする。
HashモードとHTML5モードをどちらか悩んだ末に、HTML5モードでは毎回リクエストが飛んでしまうらしいのでHashモードを使うことに。どうやら一長一短みたい。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/shogogg/items/542bd6d18f777bcc24bc&#34;&gt;AngularJS の $locationProvider.html5Mode について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;oauth認証について:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ Oauth認証について&lt;/h4&gt;

&lt;p&gt;下記のようにしてリダイレクト時のURLをマッチング。&lt;br /&gt;
&lt;code&gt;*path&lt;/code&gt;で任意の文字列とマッチングできる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        .state(&#39;oauth&#39;,
          url: &#39;/access_token=*path&#39;
          templateUrl: &#39;app/main/main.html&#39;
          controller: &amp;quot;MainCtrl&amp;quot;
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;instagramapiの利用:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ InstagramAPIの利用&lt;/h3&gt;

&lt;p&gt;ひとまずDeveloper登録から。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/shard/s117/sh/b4f0761d-b6bc-4c9d-9dbe-c459ac5ed9c7/f0dd1d0a2552d5068fbaccde8bbd0e69/deep/0/貼り付けた画像-2015-04-21-13-28.png&#34; alt=&#34;%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E3%81%9F%E7%94%BB%E5%83%8F%202015/04/21%2013:28&#34; /&gt;&lt;/p&gt;

&lt;p&gt;アプリケーションを登録する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/shard/s117/sh/fd17a3f8-feab-4962-a4ff-50500ac36c75/5aa611400a2e240a1e561f4c153484bd/deep/0/貼り付けた画像-2015-04-21-13-33.png&#34; alt=&#34;%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E3%81%9F%E7%94%BB%E5%83%8F%202015/04/21%2013:33&#34; /&gt;&lt;/p&gt;

&lt;p&gt;アプリケーションの登録ができた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/shard/s117/sh/010bf137-063c-4b7c-bb49-7dde173b3264/a17e94517e78f21939cf3df1acd66cb2/deep/0/貼り付けた画像-2015-04-21-13-34.png&#34; alt=&#34;%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E3%81%9F%E7%94%BB%E5%83%8F%202015/04/21%2013:34&#34; /&gt;&lt;/p&gt;

&lt;p&gt;認証画面を確認。
&lt;img src=&#34;https://www.evernote.com/shard/s117/sh/3a74eb3d-e878-4fc5-aa30-acec912ff9b5/e31744b19758225816adaa7744c8a29c/deep/0/貼り付けた画像-2015-04-21-13-53.png&#34; alt=&#34;%E8%B2%BC%E3%82%8A%E4%BB%98%E3%81%91%E3%81%9F%E7%94%BB%E5%83%8F%202015/04/21%2013:53&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;認証をアプリケーションないで叩く:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 認証をアプリケーションないで叩く。&lt;/h4&gt;

&lt;p&gt;アプリケーションの認証には&amp;rdquo;暗黙の認証&amp;rdquo;を使ってクライアント側のみで実行する。&lt;br /&gt;
具体的にはアプリケーション起動時に、ローカルストレージにアクセストークンがなければAPIを叩いて取得するようにした。&lt;/p&gt;

&lt;h3 id=&#34;corsにハマる:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ CORSにハマる&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://codepen.io/netsi1964/pen/drmkL?editors=101&#34;&gt;Showing popular Instagram pictures|CODEPEN&lt;/a&gt;
=&amp;gt; &lt;code&gt;callback=JSON_CALLBACK&lt;/code&gt;をつけること&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;      $http.jsonp(&#39;https://api.instagram.com/v1/media/popular?client_id=4183bc0c52d8448cbd52f6694ad9325b&amp;amp;callback=JSON_CALLBACK&#39;
      ).success( (data) -&amp;gt;
        
      )
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bennadel.com/blog/2610-using-jsonp-with-resource-in-angularjs.htm&#34;&gt;Using JSONP With $resource In AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;=&amp;gt; &lt;code&gt;$resource&lt;/code&gt;を使って記述する方法。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      insta = $resource(&#39;https://api.instagram.com/v1/media/popular&#39;,
        {
          callback: &amp;quot;JSON_CALLBACK&amp;quot;
        },
        {
          query:
            method: &#39;JSONP&#39;
            params:
              client_id: Insta.clientId
        }
      )

      insta.query().$promise.then((res)-&amp;gt;
      )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;bootstrap:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ Bootstrap&lt;/h3&gt;

&lt;p&gt;初めてのBootStrap。&lt;br /&gt;
基本的な使い方はやっぱりドットインストールが助かった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://getbootstrap.com/css/&#34;&gt;CSS|Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://getbootstrap.com/components/&#34;&gt;Components|Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://getbootstrap.com/javascript/&#34;&gt;Javascript|Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;bootflat:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ Bootflat&lt;/h4&gt;

&lt;p&gt;せっかくなのでBootflatも使ってみた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bootflat.github.io/&#34;&gt;Bootflat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;modalが閉じれない:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ modalが閉じれない&lt;/h4&gt;

&lt;p&gt;modalが閉じれなくてひどくハマった。&lt;br /&gt;
 使っていたのが&lt;a href=&#34;https://angular-ui.github.io/bootstrap/&#34;&gt;AngularのBootStrap&lt;/a&gt;だったのでダイアログの閉じ方が違った。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;       $scope.close = () -&amp;gt;
        $modalInstance.dismiss(&#39;cancel&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;masonry:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ Masonry&lt;/h3&gt;

&lt;p&gt;今回はMasonryではなく、Isotopeで対応することに。&lt;br /&gt;
itemに高さを持たせることができなくてかなりハマったけれど、&lt;code&gt;new Isotope&lt;/code&gt;をする際に&lt;code&gt;ng-repeat&lt;/code&gt;がまだ回っていなくてDOMの生成が追いついていないだけだった。
ImageLoadedも入れたいけれど、これは改善案として先へ進む。&lt;/p&gt;

&lt;p&gt;また、IsotopeとOutlayerの読み込みの順番に問題があったようなので&lt;code&gt;bower.json&lt;/code&gt;から上書きを行ったのでメモ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+  &amp;quot;overrides&amp;quot;: {
+    &amp;quot;outlayer&amp;quot;: {
+      &amp;quot;main&amp;quot;: [
+        &amp;quot;item.js&amp;quot;,
+        &amp;quot;outlayer.js&amp;quot;
+      ]
+    },
+    &amp;quot;isotope&amp;quot;: {
+      &amp;quot;main&amp;quot;: [
+        &amp;quot;item.js&amp;quot;,
+        &amp;quot;isotope.js&amp;quot;
+      ]
+    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そのあと&lt;code&gt;isFitWidth: true&lt;/code&gt;が効かなくてまたハマったけれど、親にちゃんと&lt;code&gt;margin: 0 auto;&lt;/code&gt;を付ける必要があるみたい。&lt;br /&gt;
Masonryはあまり親切ではないと思うようになった。&lt;/p&gt;

&lt;h3 id=&#34;画像の収集:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ 画像の収集&lt;/h3&gt;

&lt;p&gt;この辺りは意外とAPIを叩くだけ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;getKyumaruItems: () -&amp;gt;
  resource = $resource(&#39;https://api.instagram.com/v1/tags/:tagId/media/recent&#39;,
    {
      tagId: &#39;伊豆大島&#39;
      callback: &amp;quot;JSON_CALLBACK&amp;quot;
    },
    {
      query:
        method: &#39;JSONP&#39;
        params:
          client_id: Insta.clientId
    }
  )
  resource.query()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次のページを見るには&lt;code&gt;res.pagination&lt;/code&gt;内に&lt;code&gt;next_url&lt;/code&gt;が含まれているのでそれを使うようにする。&lt;/p&gt;

&lt;h3 id=&#34;ログイン-ログアウト:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ ログイン/ログアウト&lt;/h3&gt;

&lt;p&gt;ログインとログアウトの機能は必要なかった。
アプリケーションの利用には認証を通すようにした。&lt;/p&gt;

&lt;p&gt;ちなみにSafariだとImplicit認証のときにaccess_tokenが返ってこない。。&lt;/p&gt;

&lt;h3 id=&#34;いいね-コメント:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ いいね/コメント&lt;/h3&gt;

&lt;p&gt;クライアントサイドからだと叩くことができないようだった。&lt;br /&gt;
どこかに書いてあったけど分からなくなってしまった。&lt;/p&gt;

&lt;h3 id=&#34;unit-testing:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ Unit testing&lt;/h3&gt;

&lt;h4 id=&#34;httpbackend:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ $httpBackend&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;期待するリクエストをレスポンスを記述。&lt;/li&gt;
&lt;li&gt;api呼び出し&lt;/li&gt;
&lt;li&gt;&lt;code&gt;httpBackend.flush()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;api.getSelfData&lt;/code&gt;の返り値を&lt;code&gt;resource.query().$promise&lt;/code&gt;から&lt;code&gt;resource.query()&lt;/code&gt;に変更した。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;use strict&#39;

describe &#39;api.service&#39;, -&amp;gt;
  httpBackend = undefined

  beforeEach module(&#39;kyuMaruGram&#39;)
  beforeEach inject(($httpBackend) -&amp;gt;
    httpBackend = $httpBackend

    return
  )

  it &#39;should return correct userData.&#39;, inject((api) -&amp;gt;

    userData =      {
      &amp;quot;username&amp;quot;: &amp;quot;kotazi00&amp;quot;,
      &amp;quot;bio&amp;quot;: &amp;quot;&amp;quot;,
      &amp;quot;website&amp;quot;: &amp;quot;http://kotazi.com&amp;quot;,
      &amp;quot;profile_picture&amp;quot;: &amp;quot;https://igcdn-photos-g-a.akamaihd.net/hphotos-ak-xpa1/t51.2885-19/1538500_770312479710878_1172916184_a.jpg&amp;quot;,
      &amp;quot;full_name&amp;quot;: &amp;quot;kotazi&amp;quot;,
      &amp;quot;counts&amp;quot;: {
        &amp;quot;media&amp;quot;: 95,
        &amp;quot;followed_by&amp;quot;: 125,
        &amp;quot;follows&amp;quot;: 170
      },
      &amp;quot;id&amp;quot;: &amp;quot;13712342&amp;quot;
    }

    httpBackend
      .when(&#39;JSONP&#39;, &#39;https://api.instagram.com/v1/users/self?callback=JSON_CALLBACK&#39;)
      .respond(userData)

    data = api.getSelfData()
    httpBackend.flush()

    expect(data.username).toEqual(userData.username)
    expect(data.website).toEqual(userData.website)
    expect(data.profile_picture).toEqual(userData.profile_picture)
  )


  return
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;end-to-end-testing:c961446d10dc1756ec8ab013192d7a44&#34;&gt;■ End to End testing&lt;/h3&gt;

&lt;p&gt;新しいことばかりなので、デフォルトにあったやつを。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;main.po.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/**
 * This file uses the Page Object pattern to define the main page for tests
 * https://docs.google.com/presentation/d/1B6manhG0zEXkC-H-tPo2vwU06JhL8w9-XCF9oehXzAQ
 */

&#39;use strict&#39;;

var MainPage = function() { 
  debugger
  this.jumbEl = element(by.css(&#39;.jumbotron&#39;));
  this.h1El = this.jumbEl.element(by.css(&#39;h1&#39;));
  this.imgEl = this.jumbEl.element(by.css(&#39;img&#39;));
  this.thumbnailEls = element(by.css(&#39;body&#39;)).all(by.repeater(&#39;awesomeThing in awesomeThings&#39;));
};

module.exports = new MainPage();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;main.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;use strict&#39;;

describe(&#39;The main view&#39;, function () {
  var page;

  beforeEach(function () {
    browser.get(&#39;http://localhost:3000/index.html&#39;);
    page = require(&#39;./main.po&#39;);
  });

  it(&#39;should include jumbotron with correct data&#39;, function() {
    expect(page.h1El.getText()).toBe(&#39;\&#39;Allo, \&#39;Allo!&#39;);
    expect(page.imgEl.getAttribute(&#39;src&#39;)).toMatch(/assets\/images\/yeoman.png$/);
    expect(page.imgEl.getAttribute(&#39;alt&#39;)).toBe(&#39;I\&#39;m Yeoman&#39;);
  });

  it(&#39;list more than 5 awesome things&#39;, function () {
    expect(page.thumbnailEls.count()).toBeGreaterThan(5);
  });

});

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;成果物:c961446d10dc1756ec8ab013192d7a44&#34;&gt;成果物&lt;/h2&gt;

&lt;p&gt;改めて一週間で完成したものがこちら。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;ohshimagram.kotazi.com&#34;&gt;ohshimagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;課題:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 課題&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Gulpタスクがボロボロ&lt;/li&gt;
&lt;li&gt;CORSにハマりすぎた&lt;/li&gt;
&lt;li&gt;公開に手間取った&lt;/li&gt;
&lt;li&gt;E2Eテストが結局ちゃんと書けていない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;とりあえず、この後はどうやってコメントやフォローの機能を付けるかを考える。&lt;br /&gt;
必要であればRailsを学ぶ。というか多分必要。JenkinsとかDatabase周りも触ってみたい。&lt;/p&gt;

&lt;h4 id=&#34;感想:c961446d10dc1756ec8ab013192d7a44&#34;&gt;▼ 感想&lt;/h4&gt;

&lt;p&gt;ひとまず一週間でそれなりに動くものができたのでよかった。&lt;br /&gt;
調べてみるとフォローやコメントといった機能はクライアントサイドオンリーではできないみたい？&lt;br /&gt;
あと、アプリケーションが完成したあとの公開方法に非常に困った。&lt;br /&gt;
結局自分のサーバーに置いたのだけれど、そのうちRailsに移植させてコメント機能なども付けてうまいことやりたい。&lt;/p&gt;

&lt;p&gt;最後に。パソコンがあればどこでも仕事はできると再認識することができた。&lt;br /&gt;
東京に縛られた生活をするよりも、好きな場所で好きな時に仕事をしていたほうが楽しい。&lt;br /&gt;
数年後、自然に囲まれた場所で働いていますように！！！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>