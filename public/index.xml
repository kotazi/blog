<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kotazi.com</title>
    <link>http://kotazi.github.io/blog/</link>
    <description>Recent content on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Dec 2015 18:53:29 +0900</lastBuildDate>
    <atom:link href="http://kotazi.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Sketch3を始める前に読むべき記事6選</title>
      <link>http://kotazi.github.io/blog/post/20151218_sketch/</link>
      <pubDate>Thu, 17 Dec 2015 18:53:29 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151218_sketch/</guid>
      <description>

&lt;p&gt;AdobeCreativeCloudを会社で利用しようとしたら断られてしまった。&lt;br /&gt;
基本的なAdobeツールの使い方を理解している人間が最速でSketchを使いこなすために。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;基本説明-充実系:6c4598494aa8504aac5da5593202dfce&#34;&gt;基本説明・充実系&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leanpub.com/sketch3book/read&#34;&gt;Sketch 3 Book for Beginner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まずはこれに目を通すこと。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ascii.jp/elem/000/001/032/1032101/&#34;&gt;アプリUI制作のチュートリアルで学ぶSketchの使い方|ASCII.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シンプルなチュートリアルで基本的な使い方を理解できる。&lt;/p&gt;

&lt;h2 id=&#34;ショートカット系:6c4598494aa8504aac5da5593202dfce&#34;&gt;ショートカット系&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://whiskers.nukos.kitchen/2015/04/08/sketch-page-layer-shortcuts.html&#34;&gt;Sketch 3のページ・レイヤーを自在に操るショートカット|whiskers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レイヤー操作のショートカット記事。細かい操作を物にするには必須。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://whiskers.nukos.kitchen/2014/11/04/sketch-links.html&#34;&gt;Sketch 3を使いこなすためリンクやメモ|whiskers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ショートカット知れるし、こういう機能があるんだということも知れる良い記事。&lt;/p&gt;

&lt;h2 id=&#34;tips系:6c4598494aa8504aac5da5593202dfce&#34;&gt;TIPS系&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://coliss.com/articles/build-websites/operation/design/10-sketch-tricks-by-assentorp.html&#34;&gt;Sketchの使い方: 初心者がマスターしておきたいSketchでのデザイン作業がぐっと効率的になるチップス|coliss&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実践的でいい。&lt;/p&gt;

&lt;h2 id=&#34;おすすめプラグイン系:6c4598494aa8504aac5da5593202dfce&#34;&gt;おすすめプラグイン系&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://coliss.com/articles/build-websites/operation/design/best-plugins-for-sketch.html&#34;&gt;Sketchを更に便利にパワーアップするプラグインのまとめ|coliss&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1つのページに2つのFacebookAppIdをセットした時</title>
      <link>http://kotazi.github.io/blog/post/20151215_fb_app_id/</link>
      <pubDate>Wed, 16 Dec 2015 09:38:38 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151215_fb_app_id/</guid>
      <description>

&lt;p&gt;FacebookのApp IDを一つのページにセットした時のこと。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;sdk.jsで初期化処理に一つのappIDしかセットすることができない。
２回初期化すれば最後に初期化した時のappIdが使われる。&lt;/p&gt;

&lt;h2 id=&#34;参考:bbd27431d7bc53d05c9c0392b31105ee&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://www.sourcecoast.com/forums/jfbconnect/jfbconnect-joomla-15-support/3514-multiple-fb-apps-on-one-domain&#34; alt=&#34;Multiple FB apps on one domain?&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>手っ取り早くiPhoneからMacのローカルホストを確認する方法</title>
      <link>http://kotazi.github.io/blog/post/20151214_iphone_localhost/</link>
      <pubDate>Mon, 14 Dec 2015 16:41:10 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151214_iphone_localhost/</guid>
      <description>

&lt;p&gt;iPhoneでローカル開発環境をかくにんしたいなと思うけれど、
Charlesを使う方法だったり、ごちゃごちゃさせたり、いろいろ方法がある。
今回はMacとiPhoneで同じWi-Fiに接続できる際に一番手っ取り早い方法。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;前提条件としてiPhoneとMacが同じWi-Fiに接続されているものとします。&lt;/p&gt;

&lt;h5 id=&#34;macのipアドレスを確認する:f5e0516d08c181fdb7704efa84ca7cf1&#34;&gt;◯ Macのipアドレスを確認する&lt;/h5&gt;

&lt;p&gt;ターミナル上で&lt;code&gt;ifconfig&lt;/code&gt;と入力して確認する。&lt;/p&gt;

&lt;p&gt;ifconfig内の見方についてはここ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.atmarkit.co.jp/ait/articles/0109/29/news004.html&#34;&gt;ifconfig　～（IP）ネットワーク環境の確認／設定を行う&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各インターフェイスの役割については下記が参考になる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://bambinya.hateblo.jp/entry/2015/04/04/234428&#34;&gt;ターミナルからプライベートIPアドレスとMACアドレス、ルーティングテーブルを確認する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またifconfigでの確認ができなければ、システム環境設定のネットワークから確認が可能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AHWkah5P951L7LCfLBTtPbZVz9miBB-hptcB/image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h5 id=&#34;iphone側の設定:f5e0516d08c181fdb7704efa84ca7cf1&#34;&gt;◯ iPhone側の設定&lt;/h5&gt;

&lt;p&gt;自分のMacのIPアドレスと確認し、iPhoneのWi-Fi設定を開く。
HTTPプロキシから手動を選択し、MacのIPアドレスを入力する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.evernote.com/l/AHVh_WX90mdKrrXSMLQYw8hVFOwR_lOxmboB/image.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;iPhone側で設定したIPを直接叩けばアクセスできる。
&lt;img src=&#34;https://www.evernote.com/l/AHWUMT8vaWBG2KRS1P_yJj8tahEkoZX4egoB/image.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>クライアントへのメールを返信を見ていて考えたこと</title>
      <link>http://kotazi.github.io/blog/post/20151211_mail/</link>
      <pubDate>Sun, 13 Dec 2015 14:50:41 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151211_mail/</guid>
      <description>

&lt;p&gt;社内のSM兼CSのメールの書き方や言葉の使い方をきっかけに、社内が少し揉めた。
対外的な問題へ発展したわけではないけれど、何故それが問題視されているのかを考えてみた。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;背景:4e4f4bcf80aee365eee3c04c758da505&#34;&gt;背景&lt;/h2&gt;

&lt;p&gt;なにか具体的で致命的なメールがあったわけではない。
メールの内容自体も間違っているわけではない。&lt;/p&gt;

&lt;p&gt;質問に対しての回答に間違いはない。&lt;br /&gt;
けれども目を通してみると違和感が残る。&lt;br /&gt;
返信をもらったクライアントが満足しない印象を受ける。&lt;/p&gt;

&lt;h2 id=&#34;クライアントは何を求めているか-smは何を返すべきか:4e4f4bcf80aee365eee3c04c758da505&#34;&gt;クライアントは何を求めているか、SMは何を返すべきか&lt;/h2&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/slyJmJyKXEsi9T&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/takaumada/startup-customer-success-support&#34; title=&#34;カスタマーサポートのことは嫌いでも、カスタマーサクセスは嫌いにならないでください&#34; target=&#34;_blank&#34;&gt;カスタマーサポートのことは嫌いでも、カスタマーサクセスは嫌いにならないでください&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/takaumada&#34; target=&#34;_blank&#34;&gt;Takaaki Umada&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://image.slidesharecdn.com/startupcustomersuccesssupport-150630071137-lva1-app6891/95/-56-638.jpg?cb=1435683436&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://image.slidesharecdn.com/startupcustomersuccesssupport-150630071137-lva1-app6891/95/-60-638.jpg?cb=1435683436&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://image.slidesharecdn.com/startupcustomersuccesssupport-150630071137-lva1-app6891/95/-61-638.jpg?cb=1435683436&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;サクセスマネージャーの最重要ミッションは顧客の成功にいち早く辿り着いてもらうことである。
クライアントが問い合わせがあるのは、基本的に何か問題があったり、困っている時。
サクセスマネージャーはそれに対し、適切に対応する必要がある。&lt;/p&gt;

&lt;p&gt;今回のケースもクライアントは困っていた。&lt;/p&gt;

&lt;p&gt;サクセスマネージャーにとってクライアントの満足度は重要視すべきこと。
メールでのお問い合わせでクライアントがサクセスマネージャーに求めていたことは、
質問に対するYes/Noの回答ではない。質問を通してサクセスマネージャーに困りごとを汲みとって欲しかったのだ。
そしてそのお困りごとを解決して欲しかった。&lt;/p&gt;

&lt;h2 id=&#34;最後に:4e4f4bcf80aee365eee3c04c758da505&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;この問題に対して、「このままでは会社の損害につながるから、言葉の使い方を直すべき」という声があった。(酒の場だけれども。)
結局、クライアントが求めていることは問題の解決であるため、言葉の使い方の定性は根本的な解決にはならない。&lt;/p&gt;

&lt;p&gt;ただなったとしてもこの解決策は最後に選びたい。&lt;br /&gt;
ある程度の勉強などで身につくものであればいいが、話し方というのは長く体に染みついたものだ。&lt;br /&gt;
個性とも深く関わってくる。そういった部分を変えさせるような会社にはしてはいけない。&lt;/p&gt;

&lt;p&gt;どうしてもお問い合わせメールが難しければ、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ポジションを変えて別の人が対応する&lt;/li&gt;
&lt;li&gt;セールスが事前説明の部分に注意を払う&lt;/li&gt;
&lt;li&gt;WebでのFAQページを充実させる&lt;/li&gt;
&lt;li&gt;より直感的に分かるようUIを強化する&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;など、他にも策はある。&lt;/p&gt;

&lt;p&gt;実際のところ今回の発言は個人を深く傷付けるところであったし、
そうなってしまったら内部のマネジメントが壊れかねない。&lt;/p&gt;

&lt;p&gt;対外的なコミュニケーションも注意する必要はあるが、
内部のコミュニケーションも気をつけなければそれが会社の損害に繋がることもある。&lt;/p&gt;

&lt;p&gt;と、いろいろ学ばせていただきました。
よりよいチームを作っていきましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第6章】マネジメントの技能/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151214_management/</link>
      <pubDate>Fri, 11 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151214_management/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;27-意思決定:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;27. 意思決定&lt;/h2&gt;

&lt;p&gt;「意思決定の力点をどこに置くか。」
日本に潰え見解の一致があるとすれば、それは合意(コンセンサス)によって意思決定を行っているという点。
欧米では、意思決定の力点は、問題に対する答えに置く。日本では、意思決定で重要なことは問題を明らかにすることである。
そもそも意思決定は必要か、、そもそも何についての意思決定かを明らかにすることが重要とされる。
この段階でのコンセンサスの形成に努力を惜しまない。この段階にこそ、意思決定の核心があるとする。&lt;/p&gt;

&lt;p&gt;日本では、契約の必要を検討する段階で、契約締結度に関わりを持つことになる人達を巻き込んでおく。
関係者全員が意思決定の必要を認めた時、初めて決定が行われる。
この時ようやく交渉が始まり、その後の日本の行動は迅速である。&lt;/p&gt;

&lt;h4 id=&#34;日本の意思決定のエッセンス:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;日本の意思決定のエッセンス&lt;/h4&gt;

&lt;p&gt;① 何についての意思決定かを決めることを重点に置く&lt;br /&gt;
② 反対意見を出やすくする。コンセンサスを得るまでの間、答えについての議論は行わない&lt;br /&gt;
③ 当然の解決策よりも複数の解決案を問題にする&lt;br /&gt;
④ いかなる地位の誰が決定すべきかを問題にする&lt;br /&gt;
⑤ 決定後の関係者への売り込みを不要にする。意思決定のプロセスの中に実地の方策を組み込む。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;日本流の意思決定は独特のものである。日本社会特有の仕組みや組織の性格を前提とするのであって、どこでも使えるものではない。&lt;/strong&gt;
&lt;strong&gt;だが、その基本は日本以外でも十分に通用する。それどことか、これこそ効果的な意思決定の基本である。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;何についての意思決定かを明らかにするには、問題に対する見解からスタートしなければならない。
答えの違いをもたらす。したがって、どのような認識の仕方があるかを明らかにすることが、効果的な意思決定の第一歩となる。
まちがった問題に対する正しい答えほど、実りがないだけでなく害を与えるものはない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;意思決定は見解からスタートしなければならない。異なる見解を奨励しなければならない。&lt;/strong&gt;
明らかに間違って結論に達しているものがいても、何か自分と違う現実を見、自分と違う問題に関心を持っているからに違いないと考えなければならない。&lt;/p&gt;

&lt;h4 id=&#34;行動すべきか否か:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;行動すべきか否か&lt;/h4&gt;

&lt;p&gt;常に「意思決定は必要か」を検討しなければならない。何もしないと事態が悪化するのであれば、
意思決定を行わなければならない。&lt;/p&gt;

&lt;p&gt;① 行動によって得られるものが、コストやリスクよりも大きい時には行動する&lt;br /&gt;
② 行動するかしないかのいずれかにする。二股や妥協はいけない。&lt;/p&gt;

&lt;h4 id=&#34;意思決定の実行:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;意思決定の実行&lt;/h4&gt;

&lt;p&gt;効果的な意思決定とは行動に対するコミットである。&lt;br /&gt;
&lt;strong&gt;意思決定の実行を効果的なものにするには、決定を実行する上でなんらかの行動を起こすべき者、逆に言えば決定の実行を妨げることのできる者全員を、決定の議論のなかに責任を持たせて参画させなければならない。これは民主主義ではない。セールスマンシップである。&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;フィードバッグの仕組み:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;フィードバッグの仕組み&lt;/h4&gt;

&lt;p&gt;実行からのフィードバッグがないかぎり、期待する成果を手に入れ続けることはできない。&lt;br /&gt;
第一に、意思決定の前提となった予測をはっきりさせること。&lt;br /&gt;
第二に、決定の結果について体系的にフィードバッグしなければならない。&lt;br /&gt;
第三に、このフィードバッグの死喰いを、決定を実行する前につくりあげておかなければならない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大切なのは、問題への答えではなく、問題についての理解である。&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;効率的な行動をもたらすために、ビジョン、エネルギー、資源を総動員することである。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;28-コミュニケーション:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;28. コミュニケーション&lt;/h2&gt;

&lt;p&gt;① コミュニケーションは知覚である&lt;br /&gt;
音波が発生しても、音を感じるものがいなければ、音はしない。
コミュニケーションは受けての言葉を使わなければ成立しない。
コニュニケーションを成立させるには、受け手が何を見ているのか知らなければならない。&lt;/p&gt;

&lt;p&gt;② コミュニケーションは期待である&lt;br /&gt;
われわれは期待しているものだけを知覚する。期待しているものを見、期待しているものを聞く。
人の心は期待していないものを知覚することに対して抵抗する。
受け手が期待しているものを知ることなく、コミュニケーションを行うことはできない。&lt;/p&gt;

&lt;p&gt;③ コミュニケーションは要求である&lt;br /&gt;
コミュニケーションは受け手に何かを要求する。
受け手が何かになること、何かをすること、何かを信じることを要求する。&lt;/p&gt;

&lt;p&gt;④ コミュニケーションは情報ではない&lt;br /&gt;
コミュニケーションと情報は別物である。
コミュニケーションは知覚の対象であり、情報は論理の対象である。&lt;/p&gt;

&lt;h2 id=&#34;29-管理:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;29. 管理&lt;/h2&gt;

&lt;h4 id=&#34;組織における管理手段の三つの特性:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;組織における管理手段の三つの特性&lt;/h4&gt;

&lt;p&gt;① 管理手段は純客観的でも純中立的でもありえない。&lt;br /&gt;
② 管理手段は成果に焦点を合わせなければならない。&lt;br /&gt;
③ 管理手段は測定の対象に適していなければならない。&lt;br /&gt;
④ 管理手段の精度は、測定の対象に適していなければならない。&lt;br /&gt;
⑤ 管理手段は、時間間隔が測定の対象に適していなければならない。&lt;br /&gt;
⑥ 管理手段は単純でなければならない。&lt;br /&gt;
⑦ 管理手段は行動に焦点を合わせなければならない。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;管理の目的は収集ではなく行動にある。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;30-経営科学:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;30. 経営科学&lt;/h2&gt;

&lt;p&gt;経営科学は大きな貢献を果たしうる道具である。&lt;/p&gt;

&lt;h4 id=&#34;経営科学が公準とするべきもの:bb9514c16b0b97ec56a22a32b710db6e&#34;&gt;経営科学が公準とするべきもの&lt;/h4&gt;

&lt;p&gt;① 企業は最強最大のものであってさえ、社会や経済の力によって用意に消滅させられる存在である。&lt;br /&gt;
② 企業は、単に者や考えを生み出す存在ではない。人が価値有りと認めるものを生み出す存在である。&lt;br /&gt;
③ 企業は測定の尺度として特有のシンボル、すなわちカネを使う。それは抽象的であるとともに、驚くほど具体的な尺度である。&lt;br /&gt;
④ 経済的な活動とは、現在の資源を不確かな未来に投入することである。&lt;br /&gt;
⑤ 企業の内外で、後戻りのできない変化が常に起こっている。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;今のところ一番面白い章。&lt;br /&gt;
日本の意思決定のエッセンスに書かれていることを今まで当たり前のようにやってきた。
けれどもそれをうまく受け入れてもらえない現状の中で、これが日本独特のものであることがよく分かった。
ドラッカーの「これこそ効果的な意思決定の基本である。」という言葉にほっとさせられる。&lt;/p&gt;

&lt;p&gt;まずは日本が成果を出すこと。&lt;br /&gt;
もとより、成果を出せる環境を整える必要がある。&lt;br /&gt;
今はどうしてもNZなしでは進められない部分が多い。&lt;/p&gt;

&lt;p&gt;小さなことでもいい。&lt;br /&gt;
自分たちのマネジメントで、&lt;br /&gt;
自分たちの意思決定で、決済で、責任で。&lt;/p&gt;

&lt;p&gt;それで回して成果を出す。&lt;br /&gt;
ぶら下がりの状態から離れれば嫌でも頭を使う。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>いまいち忘れるjQuery</title>
      <link>http://kotazi.github.io/blog/post/20151210_jquery/</link>
      <pubDate>Thu, 10 Dec 2015 09:38:50 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151210_jquery/</guid>
      <description>&lt;p&gt;なんだかjQueryの使い方ってそこそこに忘れる。
忘れるというか、それなりに検索をかけているなと。&lt;/p&gt;

&lt;p&gt;そこで。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://semooh.jp/jquery/api/selectors/&#34;&gt;jQuery日本語リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ヌーのサイトに一覧ページがあることを知った。&lt;br /&gt;
困ったときはここを見ればいいし、チートシートもある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://oscarotero.com/jquery/&#34;&gt;jQuery Quick API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;wrapAll()&lt;/code&gt;とか初めて使ったけど便利だ。&lt;br /&gt;
ちなみに、&lt;code&gt;createElement()&lt;/code&gt;みたいなメソッドはなくて、
  普通に&lt;code&gt;$(&#39;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&#39;)&lt;/code&gt;ってやって作るらしい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第5章】マネジャー/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151209_management/</link>
      <pubDate>Wed, 09 Dec 2015 12:57:23 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151209_management/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;20-マネジメントの必要性:25768f8640d82261e6718ed4a074d99a&#34;&gt;20. マネジメントの必要性&lt;/h2&gt;

&lt;p&gt;マネジメントは企業の基礎資源である。&lt;/p&gt;

&lt;h4 id=&#34;三菱の話:25768f8640d82261e6718ed4a074d99a&#34;&gt;▼ 三菱の話&lt;/h4&gt;

&lt;p&gt;三菱の創業者、岩崎弥太郎(上野の岩崎邸の)は、オーナー兼起業家だけが権限と責任を持つべきであるとした。
岩崎は50歳でこの世を去り、岩崎家はマネジメントから外された。そこから三菱の新の興隆と成長が始まる。&lt;/p&gt;

&lt;p&gt;企業がある一定の規模と複雑さに達するや、マネジメントを必要とする。
マネジメントチームという骨格が、オーナー兼企業かという皮膚と交代する。
それは皮膚が進化したものではない、完全な交替である。&lt;/p&gt;

&lt;p&gt;複数人の人間が協力して、石を疎通させつつ多様な課題を同時に進行する必要が出てきた時、組織はマネジメントを必要とする。
マネジメントを書く時、組織は管理不能になり、計画は実行にされなくなる。
最悪の場合、計画の各部分が、それぞれ勝手なときに、勝手な速度で、勝手な目的と目標のもとに遂行されるようになる。
たとえ製品が優れ、従業員が有能でかつ献身的であっても、また、ボスがいかに偉大な力と魅力を持っていても、組織は、マネジメントという骨格を持つように変化しないかぎり、失敗を重ね、停滞し、坂を下り始める。&lt;/p&gt;

&lt;h2 id=&#34;21-マネジャーとは何か:25768f8640d82261e6718ed4a074d99a&#34;&gt;21. マネジャーとは何か&lt;/h2&gt;

&lt;p&gt;かつては「人の仕事に責任を持つ者」と定義されたが、
懇意tに最も急速に増えているのが、「組織の成果に責任を持つ者」。これがマネジャーである。&lt;/p&gt;

&lt;p&gt;従って今日、誰がマネジャーかを明らかにすることが緊急の課題になっている。
専門家が自らのアウトプットを他の人間の仕事と統合する上で頼りにすべき者がマネジャーである。&lt;/p&gt;

&lt;h2 id=&#34;22-マネジャーの仕事:25768f8640d82261e6718ed4a074d99a&#34;&gt;22. マネジャーの仕事&lt;/h2&gt;

&lt;p&gt;マネジャーには２つの役割がある。
① 投入した資源の総和よりも大きなものを生み出す生産体を創造すること
② 決定と行動において、直ちに必要とされているものと遠い将来に必要とされるものを調和すること&lt;/p&gt;

&lt;p&gt;あらゆるマネジャーに共通する仕事。&lt;br /&gt;
① 目標を設定する&lt;br /&gt;
② 組織する&lt;br /&gt;
③ 動機付けとコミュニケーションを図る&lt;br /&gt;
④ 評価測定をする&lt;br /&gt;
⑤ 人材を開発する&lt;br /&gt;
そして一番大切なのは「真摯さ」&lt;/p&gt;

&lt;p&gt;マネジャーの仕事は次の４つの視点から設計する。&lt;/p&gt;

&lt;p&gt;① マネジャーの仕事そのもの。これは継続的な職務。&lt;br /&gt;
② 個々のマネジャーに対し、組織や上司が設定する責任。&lt;br /&gt;
③ マネジャーの仕事は、上、下、横との関係によって規定される。&lt;br /&gt;
④ 必要とする情報とその情報の流れにおける彼の位置によって規定される。&lt;/p&gt;

&lt;p&gt;そしてこれらについて考えることが最大の責任であり、この責任から逃れることはできない。&lt;/p&gt;

&lt;h2 id=&#34;23-マネジメント開発:25768f8640d82261e6718ed4a074d99a&#34;&gt;23. マネジメント開発&lt;/h2&gt;

&lt;p&gt;未来を予測することはう可能である。したがって、明日のマネジャー育成、確保、技能について体系的に取り組まなければならない。
マネジメント開発にあらざるもの。&lt;br /&gt;
① セミナーに参加することではない。&lt;br /&gt;
② 人事計画やエリート探しではない&lt;br /&gt;
③ 人の性格を変え、人を改造するためのものではない。&lt;/p&gt;

&lt;h2 id=&#34;24-自己管理による目標管理:25768f8640d82261e6718ed4a074d99a&#34;&gt;24. 自己管理による目標管理&lt;/h2&gt;

&lt;p&gt;人を間違った方向へ持っていく要因。
① 技能の文化&lt;br /&gt;
「石切り工」の話。「生計を立てている」「最高の石切りの仕事」「教会を立てている」。第三の男がマネジャー。&lt;/p&gt;

&lt;p&gt;② 組織の階級化&lt;br /&gt;
③ 階層の分離&lt;br /&gt;
コミュニケーションが成立するには、共通の言事と共通の理解が前提となる。(そう行かない場合はどうするんだろ)&lt;br /&gt;
④ 報酬の意味付け&lt;/p&gt;

&lt;h2 id=&#34;25-ミドルマネジメント:25768f8640d82261e6718ed4a074d99a&#34;&gt;25. ミドルマネジメント&lt;/h2&gt;

&lt;p&gt;伝統的なミドルは命令する人。新種は知識を供給する人。新種のミドルは上や横に向かって、すなわち自分が命令できない人間に対して「責任」を持つ。彼らの決定と行動が、組織の方向と能力に直接影響を与える。&lt;/p&gt;

&lt;h2 id=&#34;26-組織の精神:25768f8640d82261e6718ed4a074d99a&#34;&gt;26. 組織の精神&lt;/h2&gt;

&lt;p&gt;天才に頼ることはできない。&lt;br /&gt;
① 組織の焦点は、成果に合わせなければならない。&lt;br /&gt;
② 組織の焦点は、問題ではなく機会に合わせなければならない。&lt;/p&gt;

&lt;p&gt;組織の信条と価値観に沿って行わなければならない。
真摯さこそ唯一の接待条件。&lt;/p&gt;

&lt;p&gt;弱みがないことを評価してはならない。&lt;br /&gt;
&lt;strong&gt;組織というものは、問題ではなく機会に目を向けることによって、その精神を高く維持することができる。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;真摯さを絶対視して、初めてまともな組織といえる。&lt;/p&gt;

&lt;p&gt;① 強みよりも弱みに目を向けるものをマネジャーに任命してはならない。&lt;br /&gt;
② 何が正しいかよりも、誰が正しいかに関心を持つものをマネジャーに任命してはならない。&lt;br /&gt;
③ 真摯さよりも、頭の良さを重視するものをマネジャーに任命してはならない。&lt;br /&gt;
④ 部下に脅威を感じるものを昇進させてはならない。&lt;br /&gt;
⑤ 自らの仕事に高い基準を設定しないものもマネジャーに任命してはならない。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;個人的に最も気になる。マネジャーとは何か。誰か。
「専門家」という人間(役職)が曖昧な形て定義されているのがマネジャーとの関係性をややこしくさせた。
「専門家の課題」では、マネジャーは専門家と他の人間のHUBのような存在として登場する。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第4章】社会的責任/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151208_management/</link>
      <pubDate>Tue, 08 Dec 2015 21:54:29 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151208_management/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;15-マネジメントと社会:69aa0425b37204259e91dbea7c98d3bf&#34;&gt;15. マネジメントと社会&lt;/h2&gt;

&lt;p&gt;「企業の社会的責任」の意味が変わった。
かつては下記の三つの分野。&lt;br /&gt;
① 私的な倫理と公的な倫理との関係に関わる問題。&lt;br /&gt;
② 働くものに対する責任に関わる問題&lt;br /&gt;
③ 地域社会への貢献という意味での責任に関わる問題&lt;/p&gt;

&lt;p&gt;こんにちは、社会の問題に取り組み解決するために、企業は何を行い、何を行うべきか。
人種差別や環境問題といったものの解決に向けて行いうる貢献に重点が置かれる。&lt;/p&gt;

&lt;h2 id=&#34;16-社会的責任はどこに産まれるか:69aa0425b37204259e91dbea7c98d3bf&#34;&gt;16. 社会的責任はどこに産まれるか&lt;/h2&gt;

&lt;p&gt;社会的責任の問題は、&lt;br /&gt;
① 自らの活動が社会に対して与える影響から生ずる。&lt;br /&gt;
② 自らの活動とはかかわりなく社会自体の問題として生ずる。&lt;/p&gt;

&lt;p&gt;社会的影響範囲の問題を解決するにはトレードオフが必要である。
社会の問題は、社会の機能不全であり、社会を退化させる病である。
が、それは組織、企業にとっては挑戦であり、機会の源泉である。
(フォードは賃金引き上げで総労働コストの削減をし、アメリカの産業社会を変えた。)&lt;/p&gt;

&lt;p&gt;企業が健康であるためには、健全な、少なくとも機能する社会が必要である。社会と地域の健全さこそ、企業が成功し成長するための前提である。&lt;/p&gt;

&lt;h2 id=&#34;17-社会的責任の限界:69aa0425b37204259e91dbea7c98d3bf&#34;&gt;17. 社会的責任の限界&lt;/h2&gt;

&lt;p&gt;マネジメントにとっての最大の役割は、自らの組織に対するものである。
マネジメントは、事業上のリスクを負い、将来の活動に着手する上で必要な利益の最低限度というものを知って置かなければならない。意思決定を行う上で、この限度を知らなければならない。&lt;/p&gt;

&lt;p&gt;能力と価値観に寄る限界。
自らに能力のない仕事を引き受けることも、無責任である。また、自らの価値体系に合致しない課題に取り組むことを避けなければならない。
したがって、マネジメントは少なくとも、自らと自らの組織にとって欠けている能力が何であるかを知る必要がある。&lt;/p&gt;

&lt;p&gt;責任と権限は、同一のものの両面である。
企業が責任を要求されたときは、必ずそれについて「責任を持っているか、持つべきか」を自問する必要がある。&lt;/p&gt;

&lt;p&gt;最大の社会的責任とは、自らに特有の機能を果たすことである。
最大の無責任とは、能力を超えた課題に取り組み、あるいは社会的責任の名のもとに他から権限を奪うことによって、自らに特有の機能を遂行するための能力を損なうことである。&lt;/p&gt;

&lt;h2 id=&#34;18-企業と政府:69aa0425b37204259e91dbea7c98d3bf&#34;&gt;18. 企業と政府&lt;/h2&gt;

&lt;p&gt;社会的責任に関わる重大な問題のひとつとして、政府との関係がある。
組織社会の現実とニーズに応じた新しい政治理論を必要としているが、今のところはまだない。
ただ、それらの中間的な解決策を考え、実行について監視することはマネジメントの仕事である。&lt;/p&gt;

&lt;p&gt;歴史上のモデル。
資本主義経済すなわち市場経済における政府と企業の関係を表すモデルとして、自由放任(レッセフェール)を説いている。が、現実には19性器のイギリスで短い期間に行われたもの。&lt;/p&gt;

&lt;p&gt;政府と企業の関係を律してきたのは２つの政治モデル。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;重商主義(マーカンティズム): 企業人は完了に比べて社会的に劣る =&amp;gt; 「企業は〜〜しろ」&lt;/li&gt;
&lt;li&gt;立憲主義(コンスティテューショナリズム): 基本的に政府と企業は対立関係 =&amp;gt; 「企業は〜〜するなかれ」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今日、立憲主義も重商主義も陳腐化した。&lt;br /&gt;
モデルが無くなった今、満たすべき基準&lt;br /&gt;
① 企業とそのマネジメントを、自立した責任のある存在にする&lt;br /&gt;
② 変化を可能とする自由で柔軟な社会&lt;br /&gt;
③ グローバル経済と国家の政治主権とを調和する&lt;br /&gt;
④ 機能を果たす強力な政府を維持強化する&lt;/p&gt;

&lt;h2 id=&#34;プロフェッショナルの倫理:69aa0425b37204259e91dbea7c98d3bf&#34;&gt;プロフェッショナルの倫理&lt;/h2&gt;

&lt;p&gt;企業倫理や企業人の倫理。正直であるとか美意識であるとか。&lt;/p&gt;

&lt;p&gt;リーダー的地位にあるものの責任。
彼らは本質的にはプロフェッショナルである。
つまり、ある身分、地位、卓越性、権限が与えられているということでもある。
同時に、義務も与えられている。&lt;/p&gt;

&lt;p&gt;2500年前、ギリシャの名医ヒポクラテスのち会の中に、
「知りながら害をなすことはしないとの約束はしなければならない。」とある。
これを信じられなければ何も信じられない。プロは自立性を持たなければならない。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ベンチャーをやっていて、社会的責任について考えたことは実はあまりなかった。
けれども国内の大企業に目を向けてみると、そういった社会的責任への自覚や、行いが感じられる。
それはきっと企業の唯一性から生まれるのだろう。&lt;/p&gt;

&lt;p&gt;「この事業は自分たちでしかできない。」「他社では絶対に作れない。」、そう思って自分たちの製品や事業を扱っている組織出れば、自然と社会的責任に対する意識が芽生える。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ruby - pry導入編</title>
      <link>http://kotazi.github.io/blog/post/20151207_pry/</link>
      <pubDate>Mon, 07 Dec 2015 17:48:50 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151207_pry/</guid>
      <description>

&lt;p&gt;Railsのデバッグについて調べていた。&lt;br /&gt;
pryを知った。便利そうだったことメモ書き。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;pryとは:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;Pryとは&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;./../../media/pry_logo.png&#34; alt=&#34;pry&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pryrepl.org/&#34;&gt;Pry&lt;/a&gt;はRuby標準的なIRBシェルの強力な代替手段です。
シンタックスハイライトや、フレキシブルなプラグインアーキテクチャ、実行時の呼び出しやドキュメントの閲覧を備えています。&lt;/p&gt;

&lt;h2 id=&#34;インストール:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;インストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ gem install pry pry-doc
$ pry
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;.ls&lt;/code&gt;, &lt;code&gt;.pwd&lt;/code&gt;などでShellコマンドを呼び出せる。&lt;/p&gt;

&lt;h2 id=&#34;railsプロジェクトに組み込む:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;Railsプロジェクトに組み込む&lt;/h2&gt;

&lt;p&gt;RailsプロジェクトにPryを入れて、ブレークポイントやステップ実行が行えるようにした。&lt;/p&gt;

&lt;p&gt;Gemfileを編集(参考:&lt;a href=&#34;http://ruby-rails.hatenadiary.com/entry/20141024/1414081224&#34;&gt;Railsの開発効率をあげる - Pryを使ってRailsのコンソールをパワーアップ &amp;amp; デバッグをする&lt;/a&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;group :development, :test do
  gem &#39;pry-rails&#39;, &#39;~&amp;gt; 0.3.4&#39;  # rails console(もしくは、rails c)でirbの代わりにpryを使われる
  gem &#39;pry-doc&#39;, &#39;~&amp;gt; 0.8.0&#39;    # methodを表示
  gem &#39;pry-byebug&#39;, &#39;~&amp;gt; 3.3.0&#39; # デバッグを実施(Ruby 2.0以降で動作する)
  gem &#39;pry-stack_explorer&#39;, &#39;~&amp;gt; 0.4.9.2&#39; # スタックをたどれる
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;モデル確認:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;■ モデル確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[12] pry(main)&amp;gt; show-models
Administrator
  id: integer
  email: string
  email_for_index: string
  hashed_password: string
  suspended: boolean
  created_at: datetime
  updated_at: datetime
StaffMember
  id: integer
  email: string
  email_for_index: string
  family_name: string
  given_name: string
  family_name_kana: string
  given_name_kana: string
  hashed_password: string
  start_date: date
  end_date: date
  suspended: boolean
  created_at: datetime
  updated_at: datetime
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ルート確認:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;■ ルート確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[13] pry(main)&amp;gt; show-routes
       Prefix Verb   URI Pattern              Controller#Action
   staff_root GET    /staff(.:format)         staff/top#index
  staff_login GET    /staff/login(.:format)   staff/sessions#new
staff_session POST   /staff/session(.:format) staff/sessions#create
              DELETE /staff/session(.:format) staff/sessions#destroy
   admin_root GET    /admin(.:format)         admin/top#index
  admin_login GET    /admin/login(.:format)   admin/sessions#new
admin_session POST   /admin/session(.:format) admin/sessions#create
              DELETE /admin/session(.:format) admin/sessions#destroy
customer_root GET    /customer(.:format)      customer/top#index
         root GET    /                        errors#routing_error
              GET    /*anything(.:format)     errors#routing_error
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;デバッグ:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;デバッグ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;binding.pry&lt;/code&gt;を打ち込むとブレークポイントになる。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show-stack&lt;/code&gt;でスタックトレースを表示&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;参考url:f3bd45a4a5113941a84c21ea0e18d62f&#34;&gt;参考URL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://labs.timedia.co.jp/2011/12/rubyist-should-use-pry.html&#34;&gt;Rubyistよ、irbを捨ててPryを使おう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.tokoyax.com/entry/ruby/how-to-use-pry&#34;&gt;Ruby 2.x.x 入門 -そう、pry ならね。-&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ruby-rails.hatenadiary.com/entry/20141024/1414081224&#34;&gt;Railsの開発効率をあげる - Pryを使ってRailsのコンソールをパワーアップ &amp;amp; デバッグをする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/yaotti/items/c6e850010f36acedb0e1&#34;&gt;Railsのコンソールをより便利にするpry-rails gem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/k0kubun/items/b118e9ccaef8707c4d9f&#34;&gt;今更聞けないpryの使い方と便利プラグイン集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ものすごく便利だった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【第3章】仕事と人間/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/20151202/</link>
      <pubDate>Thu, 03 Dec 2015 16:38:36 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151202/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;9-新しい真実:27079d48b301568f842ea9c33a1c0177&#34;&gt;9. 新しい真実&lt;/h2&gt;

&lt;p&gt;今日の社会は被雇用者社会である。 一世紀前までは小さな集団で働き、仕事は家を中心に行っていた。
今日、知識労働は複雑な大組織において行われている。知識労働のほとんどは、その生産性を測定することはもちろん、定義することさえ難しい。
かくして、仕事と人のマネジメントにおいて、３つの挑戦に直面している。&lt;/p&gt;

&lt;p&gt;① 被雇用者社会の到来
② 肉体労働者の心理的、社会的変化
③ 脱工業化社会における心理的、社会的センターとしての知識労働、知識労働者の台頭&lt;/p&gt;

&lt;p&gt;つまり、昨今のマネジメントはいままでの社会のマネジメントとは一味違う。&lt;/p&gt;

&lt;h2 id=&#34;10-仕事と労働:27079d48b301568f842ea9c33a1c0177&#34;&gt;10. 仕事と労働&lt;/h2&gt;

&lt;p&gt;先進国の生活水準を引き上げたのはテイラーの科学的管理法。&lt;/p&gt;

&lt;p&gt;仕事と労働は異なる。 仕事の生産性を上げるうえで必要なもの、人が生き生きと働くうえで必要なものは違う。 双方をマネジメントする必要があり、どちらかがダメであれば失敗。&lt;/p&gt;

&lt;p&gt;仕事は一般的かつ客観的な存在であり、分析と統合と管理の対象になる。&lt;/p&gt;

&lt;p&gt;①分析。基本的な作業を明らかにし、論理的な順序に並べる ②プロセスへの統合。個々の作業を1人の仕事へ、1人の仕事を生産プロセスへ組み込む。 ③管理。偏差を感知し、プロセスの変更の必要性を知り、必要な水準にプロセスを維持するためのフィードバックの仕組みが必要。&lt;/p&gt;

&lt;p&gt;それに対し、働くことは人の活動である。 そこには5つの次元がある。&lt;/p&gt;

&lt;p&gt;①生理的な次元。仕事は均一に、労働は多様性を。 ②心理的な次元。例えば労働のない世界が実現するかもしれないが、その時人は人格の危機に直面する。 ③社会的な次元。 ④経済的な次元。 ⑤政治的な次元。&lt;/p&gt;

&lt;h2 id=&#34;11-仕事の生産性:27079d48b301568f842ea9c33a1c0177&#34;&gt;11. 仕事の生産性&lt;/h2&gt;

&lt;p&gt;自己実現の第一歩は仕事を生産的なものにすることである。&lt;/p&gt;

&lt;p&gt;そのための４つ。
①分析。仕事に必要な作業と手順と条件を知る。
②統合。作業を集めプロセスとして編成する。
③管理。管理手段を組み込む。
④道具。&lt;/p&gt;

&lt;p&gt;さらに、成果。すなわち仕事からのアウトプットを中心に置く。&lt;/p&gt;

&lt;h2 id=&#34;12-人と労働のマネジメント:27079d48b301568f842ea9c33a1c0177&#34;&gt;12. 人と労働のマネジメント&lt;/h2&gt;

&lt;p&gt;X理論: 人は怠惰で仕事を嫌う Y理論: 人は欲求を持ち、仕事を通じて自己実現と責任を欲する&lt;/p&gt;

&lt;p&gt;どちらもマグレガーが示した理論であるが、どちらが正しいとは言わなかった。&lt;/p&gt;

&lt;p&gt;産業心理学では、Y理論への忠誠を称する。だがその中身は心理的操作による支配であり、前提はX理論にある。&lt;/p&gt;

&lt;p&gt;これはX理論を進化させたものにあたるが、実際に有効ではない。この理論は支配する側に天才を必要とする。&lt;/p&gt;

&lt;p&gt;有効な方法は何か。 一般に働くことと働く人の歴史は幸福なものではなかった。が、例外があり、働くことが自己実現と成果を意味した時代や組織があった。国家存亡のときである。 でもそれでは厳しい。&lt;/p&gt;

&lt;p&gt;日本企業での成功。 1920から1930年代に大企業向けに開発されたものである。&lt;/p&gt;

&lt;p&gt;①日本でもインダストリアルエンジニアは欧米と同じ手法で研究、分析した。が、彼らは職務の設計は行わない。仕事の内容を明確にした段階で職場に任せる。
②あらゆる人間が退職するまで研鑽を日常の課題とする。
③終身雇用制度を持つ。
④福利厚生が重視される。 ⑤強力なリーダーを育てるようには見えない。終身雇用制度であり、年功序列であるため、若い人材の育成がマネジメントの第一の責任とされる。 ⑥組織にあらゆる階層において意思決定が何を意味するかを考え、責任を分担することが期待される。&lt;/p&gt;

&lt;p&gt;これらは日本古来の慣行ではないが、日本の基本的な価値観と信条を反映したものであり、そのまま欧米に移植することはできない。&lt;/p&gt;

&lt;p&gt;根底にある考えは日本特有のものでもないので、欧米にも同じ考え方はある。 カールツァイスやIBMも成功している。&lt;/p&gt;

&lt;p&gt;これまでの家族的マネジメント、参加型マネジメントの多くは&amp;rdquo;権限&amp;rdquo;の組織化に焦点を合わせた。&lt;/p&gt;

&lt;p&gt;これに対し、今の例は、働くことをマネジメントの基礎とし、&amp;rdquo;責任&amp;rdquo;の組織化を行った。&lt;/p&gt;

&lt;h2 id=&#34;13-責任と保障:27079d48b301568f842ea9c33a1c0177&#34;&gt;13. 責任と保障&lt;/h2&gt;

&lt;p&gt;責任に応じてもらうために、企業やマネジメントは何をしなければならないか。&lt;/p&gt;

&lt;p&gt;働きがいを与えるには、仕事そのものに責任を持たせなければならない。そのために必要不可欠なもの。
① 生産的な仕事
② フィードバック情報
③ 継続学習&lt;/p&gt;

&lt;h2 id=&#34;14-人は最大の資産である:27079d48b301568f842ea9c33a1c0177&#34;&gt;14. 「人は最大の資産である」&lt;/h2&gt;

&lt;p&gt;権限と権力を混同してはいけない。
マネジメントはもともと権力を持たない。責任を持つだけである。&lt;/p&gt;

&lt;p&gt;日本企業やIMB, ツァイスは働くものに主体的に成果を挙げさせることでマネジメントの権限を強化することができることを知っていた。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;人のマネジメントとは、人の強みを発揮させることである。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;「人こそ最大の資産である。」という。「組織の違いは人の働きだけである。」ともいう。
事実、人以外の資源は全て同じように使われる。&lt;/p&gt;

&lt;p&gt;実際に行うことが必要。
① 仕事と職場に対して、成果と責任を組み込む。
② 共に働く人たちを生かすべきものとして捉える。
③ 強みが成果に結びつくように人を配置すること。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;時代の変化による組織や社会の変化、それに応じたマネジメントの変化について学べた。&lt;br /&gt;
また、日本企業のマネジメントの特色を、今の職場と照らして感じることができた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【Tips】circleciでbundle installに失敗した</title>
      <link>http://kotazi.github.io/blog/post/2015120101/</link>
      <pubDate>Tue, 01 Dec 2015 19:21:54 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015120101/</guid>
      <description>&lt;p&gt;いつのまにかdevelopがcircleciをパスしなくなってしまった時の概要と対応。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;下記のようなエラーが出た。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Gem::InstallError: mime-types-data requires Ruby version &amp;gt;= 2.0.
An error occurred while installing mime-types-data (3.2015.1120), and Bundler
cannot continue.
Make sure that `gem install mime-types-data -v &#39;3.2015.1120&#39;` succeeds before

bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3  returned exit code 5

bundling. Action failed: bundle install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ので下記で対応。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem &#39;mime-types&#39;, &#39;2.6&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でも先輩に教えてもらったところ、
CircleCiではデフォルトのRubyのバージョンが1.9.3になっているらしい。&lt;br /&gt;
今までのmime-typesはそれで良かったが最近のアップデートで2.0以上にしか対応していない。&lt;br /&gt;
だから、Rubyのバージョンを上げるのが正しい。&lt;/p&gt;

&lt;p&gt;なるほど。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MasonryをAngularで使う際に注意すること</title>
      <link>http://kotazi.github.io/blog/post/2015113001/</link>
      <pubDate>Mon, 30 Nov 2015 15:18:19 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015113001/</guid>
      <description>

&lt;p&gt;Masonryのstampが正しく動かないことがあったのでメモ。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Angularプロジェクトで&lt;a href=&#34;https://github.com/desandro/masonry&#34;&gt;Masonry&lt;/a&gt;と&lt;a href=&#34;https://github.com/passy/angular-masonry&#34;&gt;AngularJS Masonry Directive&lt;/a&gt;を利用している。&lt;br /&gt;
その際にMasonryのstampが動いていなかったのでメモ。
なんで動かなかったかというと&lt;a href=&#34;http://qiita.com/ukyo/items/0aa47142020c07874415&#34;&gt;MyInclude&lt;/a&gt;とngIfがよくなかった。&lt;br /&gt;
とりあえずサンプル&lt;/p&gt;

&lt;h3 id=&#34;ng-ifバージョン-動かない:4972609874c0ecfbd9a991e9e31f8075&#34;&gt;■ ng-ifバージョン(動かない)&lt;/h3&gt;

&lt;p&gt;&lt;p data-height=&#34;266&#34; data-theme-id=&#34;15717&#34; data-slug-hash=&#34;ojRRmP&#34; data-default-tab=&#34;result&#34; data-user=&#34;kotazi&#34; class=&#39;codepen&#39;&gt;See the Pen &lt;a href=&#39;http://codepen.io/kotazi/pen/ojRRmP/&#39;&gt;【AngularJS】Masonry Directive Behavior with Stamp(ng-if)&lt;/a&gt; by Kohei  Saeki (&lt;a href=&#39;http://codepen.io/kotazi&#39;&gt;@kotazi&lt;/a&gt;) on &lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async src=&#34;//assets.codepen.io/assets/embed/ei.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;ng-showバージョン-動く:4972609874c0ecfbd9a991e9e31f8075&#34;&gt;■ ng-showバージョン(動く)&lt;/h3&gt;

&lt;p&gt;&lt;p data-height=&#34;266&#34; data-theme-id=&#34;15717&#34; data-slug-hash=&#34;EVBZeG&#34; data-default-tab=&#34;result&#34; data-user=&#34;kotazi&#34; class=&#39;codepen&#39;&gt;See the Pen &lt;a href=&#39;http://codepen.io/kotazi/pen/EVBZeG/&#39;&gt;【AngularJS】Masonry Directive Behavior with Stamp(ng-show)&lt;/a&gt; by Kohei  Saeki (&lt;a href=&#39;http://codepen.io/kotazi&#39;&gt;@kotazi&lt;/a&gt;) on &lt;a href=&#39;http://codepen.io&#39;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async src=&#34;//assets.codepen.io/assets/embed/ei.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;ngIfの場合がDOMが再生性されているので、stampが毎回解除されてしまう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【訳読】ngInfiniteScroll</title>
      <link>http://kotazi.github.io/blog/post/2015112701/</link>
      <pubDate>Fri, 27 Nov 2015 15:18:19 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015112701/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://sroze.github.io/ngInfiniteScroll/documentation.html&#34;&gt;ngInfiniteScroll&lt;/a&gt;についてです。
Issueが溜まっているけれど、一年近く更新がない。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;ドキュメント:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;ドキュメント&lt;/h2&gt;

&lt;p&gt;infiniteScroll (directive in module infinite-scroll)&lt;/p&gt;

&lt;h2 id=&#34;説明:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;説明&lt;/h2&gt;

&lt;p&gt;要素の底がブラウザの底に近づいた時に、infiniteScrollで特定の振る舞いを指定することができます。&lt;/p&gt;

&lt;h2 id=&#34;使い方:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;使い方&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ANY infinite-scroll=&#39;{expression}&#39;
     [infinite-scroll-distance=&#39;{number}&#39;]
     [infinite-scroll-disabled=&#39;{boolean}&#39;]
     [infinite-scroll-immediate-check=&#39;{boolean}&#39;]
     [infinite-scroll-listen-for-event=&#39;{string}&#39;]&amp;gt;
&amp;lt;/ANY&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;パラメータ:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;パラメータ&lt;/h2&gt;

&lt;h4 id=&#34;infinite-scroll-expression:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;&lt;strong&gt;infinite-scroll - {expression}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;エレメントの底がブラウザの底に近づいた時に、式を評価します。(基本的には関数呼び出し)&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-distance-optional-number:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;&lt;strong&gt;infinite-scroll-distance (optional) - {number}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;infinite-scrollに評価された式がトリガーされる前に、エレメントの底がブラウザの底にどれだけ近いかを表す数字です。ウインドウの高さの倍数で測定します。たとえば、ブラウザウィンドウの高さが1000pxで、&lt;code&gt;infinite-scroll-distance&lt;/code&gt;が2にセットされている場合、infinite scrollの式はエレメントの底がブラウザウィンドウの底から2000px以内にあるときに評価します。デフォルトは0です。(要素の底がブラウザウィンドウの下部を横切るとき式が評価されます)&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-disabled-optional-boolean:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;&lt;strong&gt;infinite-scroll-disabled (optional) - {boolean}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;ブール式です。trueの場合、他のすべての条件が満たされている場合でも infininite scrollが評価されることはありません。たいていは一時停止などで使われます。例えばAjax読込中などです。スクロールイベントが発火し、この属性が評価を妨げた場合、そのイベントは属性値が再度falseになったタイミングで再度評価されます。&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-immediate-check-optional-boolean:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;&lt;strong&gt;infinite-scroll-immediate-check (optional) - {boolean}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;スクロールイベントが起こっていない場合でも、ディレクティブがinfinite scroll式を評価するかを指定するブール式です。コンテンツの高さが十分にないときに便利です。デフォルトはtrueです。&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-listen-for-event-optional-string:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;&lt;strong&gt;infinite-scroll-listen-for-event (optional) - {string}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;イベント名を設定します。このイベントが実行された際、スクロール位置のチェックが走ります。手動でスクロールハンドラをトリガーする必要がある場合に便利です。&lt;/p&gt;

&lt;h2 id=&#34;モジュールの読み込み:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;モジュールの読み込み&lt;/h2&gt;

&lt;p&gt;infiniteScrollディレクティブは&lt;code&gt;infinite-scroll&lt;/code&gt;モジュール内で利用可能です。アクセスを可能にするために、&lt;code&gt;infinite-scroll&lt;/code&gt;が自身のモジュールの依存関係に含まれていることを確認してください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var myApp = angular.module(&#39;myApp&#39;, [&#39;infinite-scroll&#39;]);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;スクロールイベントを絞る:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;スクロールイベントを絞る&lt;/h2&gt;

&lt;p&gt;スクロールイベントは非常に頻繁に発火します。これによってパフォーマンスを低下させたり、スクロールの挙動を悪くしてしまうことがあります。これを和らげるために、infiniteScrollではmillisecondsにおけるスクロールイベントの上限を設定することができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// you might call this after your module initalization
angular.module(&#39;infinite-scroll&#39;).value(&#39;THROTTLE_MILLISECONDS&#39;, 250)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;手動でスクロールハンドラをトリガーする:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;手動でスクロールハンドラをトリガーする&lt;/h2&gt;

&lt;p&gt;アイテムの高さを変更したり隠したりした際に、ユーザーのスクロールイベント無しで短いリストを取得し、再構築させることができます。この場合、&lt;code&gt;infinite-scroll-listen-for-event&lt;/code&gt;を使います。また、スクロールチェックが必要であれば、対応するイベントを発生できます。例えば、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div infinite-scroll=&amp;quot;addMoreItems()&amp;quot; infinite-scroll-listen-for-event=&amp;quot;list:filtered&amp;quot;&amp;gt;
  [...]
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そしてコントローラーで下記のチェックをトリガーします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$scope.$emit(&#39;list:filtered&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;典型的な使い方:6bb2504481b08df6e18dc7a6890ecaba&#34;&gt;典型的な使い方&lt;/h2&gt;

&lt;p&gt;一般的には、配列やオブジェクトで一連性を持ったものを見せるためにngRepeatを使うなど、他の要素を含んだ要素上で&lt;code&gt;infiniteScroll&lt;/code&gt;ディレクティブを使います。たいてい、infinite-scroll属性に渡す式ではngRepeatの配列にエレメントを追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div infinite-scroll=&amp;quot;addMoreItems()&amp;quot;&amp;gt;
  &amp;lt;div ng-repeat=&amp;quot;item in items&amp;quot;&amp;gt;Item number {{$index}}: {{$item}}&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>【訳読】AngularJS - ngInfiniteScroll</title>
      <link>http://kotazi.github.io/blog/post/2015112401/</link>
      <pubDate>Thu, 26 Nov 2015 17:30:17 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015112401/</guid>
      <description>

&lt;p&gt;ngInfiniteScroll&lt;/p&gt;

&lt;p&gt;Documentation&lt;/p&gt;

&lt;h2 id=&#34;ドキュメント:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;ドキュメント&lt;/h2&gt;

&lt;p&gt;infiniteScroll (directive in module infinite-scroll)&lt;/p&gt;

&lt;h2 id=&#34;説明:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;説明&lt;/h2&gt;

&lt;p&gt;要素の底がブラウザの底に近づいた時に、infiniteScrollで特定の振る舞いを指定することができます。&lt;/p&gt;

&lt;h2 id=&#34;使い方:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;使い方&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;ANY infinite-scroll=&#39;{expression}&#39;
     [infinite-scroll-distance=&#39;{number}&#39;]
     [infinite-scroll-disabled=&#39;{boolean}&#39;]
     [infinite-scroll-immediate-check=&#39;{boolean}&#39;]
     [infinite-scroll-listen-for-event=&#39;{string}&#39;]&amp;gt;
&amp;lt;/ANY&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;パラメータ:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;パラメータ&lt;/h2&gt;

&lt;h4 id=&#34;infinite-scroll-expression:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;&lt;strong&gt;infinite-scroll - {expression}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;エレメントの底がブラウザの底に近づいた時に、式を評価します。(基本的には関数呼び出し)&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-distance-optional-number:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;&lt;strong&gt;infinite-scroll-distance (optional) - {number}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;infinite-scrollに評価された式がトリガーされる前に、エレメントの底がブラウザの底にどれだけ近いかを表す数字です。ウインドウの高さの倍数で測定します。たとえば、ブラウザウィンドウの高さが1000pxで、&lt;code&gt;infinite-scroll-distance&lt;/code&gt;が2にセットされている場合、infinite scrollの式はエレメントの底がブラウザウィンドウの底から2000px以内にあるときに評価します。デフォルトは0です。(要素の底がブラウザウィンドウの下部を横切るとき式が評価されます)&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-disabled-optional-boolean:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;&lt;strong&gt;infinite-scroll-disabled (optional) - {boolean}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;ブール式です。trueの場合、他のすべての条件が満たされている場合でも infininite scrollが評価されることはありません。たいていは一時停止などで使われます。例えばAjax読込中などです。スクロールイベントが発火し、この属性が評価を妨げた場合、そのイベントは属性値が再度falseになったタイミングで再度評価されます。&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-immediate-check-optional-boolean:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;&lt;strong&gt;infinite-scroll-immediate-check (optional) - {boolean}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;スクロールイベントが起こっていない場合でも、ディレクティブがinfinite scroll式を評価するかを指定するブール式です。コンテンツの高さが十分にないときに便利です。デフォルトはtrueです。&lt;/p&gt;

&lt;h4 id=&#34;infinite-scroll-listen-for-event-optional-string:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;&lt;strong&gt;infinite-scroll-listen-for-event (optional) - {string}&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;イベント名を設定します。このイベントが実行された際、スクロール位置のチェックが走ります。手動でスクロールハンドラをトリガーする必要がある場合に便利です。&lt;/p&gt;

&lt;h2 id=&#34;モジュールの読み込み:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;モジュールの読み込み&lt;/h2&gt;

&lt;p&gt;infiniteScrollディレクティブは&lt;code&gt;infinite-scroll&lt;/code&gt;モジュール内で利用可能です。アクセスを可能にするために、&lt;code&gt;infinite-scroll&lt;/code&gt;が自身のモジュールの依存関係に含まれていることを確認してください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var myApp = angular.module(&#39;myApp&#39;, [&#39;infinite-scroll&#39;]);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;スクロールイベントを絞る:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;スクロールイベントを絞る&lt;/h2&gt;

&lt;p&gt;Scroll events can be triggered very frequently, which can hurt performance and make scrolling appear jerky. To mitigate this, infiniteScroll can be configured to process scroll events a maximum of once every x milliseconds:&lt;/p&gt;

&lt;p&gt;スクロールイベントは非常に頻繁に発火します。これによってパフォーマンスを低下させたり、スクロールの挙動を悪くしてしまうことがあります。これを和らげるために、infiniteScrollではmillisecondsにおけるスクロールイベントの上限を設定することができます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// you might call this after your module initalization
angular.module(&#39;infinite-scroll&#39;).value(&#39;THROTTLE_MILLISECONDS&#39;, 250)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;手動でスクロールハンドラをトリガーする:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;手動でスクロールハンドラをトリガーする&lt;/h2&gt;

&lt;p&gt;アイテムの高さを変更したり隠したりした際に、ユーザーのスクロールイベント無しで短いリストを取得し、再構築させることができます。この場合、&lt;code&gt;infinite-scroll-listen-for-event&lt;/code&gt;を使います。また、スクロールチェックが必要であれば、対応するイベントを発生できます。例えば、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div infinite-scroll=&amp;quot;addMoreItems()&amp;quot; infinite-scroll-listen-for-event=&amp;quot;list:filtered&amp;quot;&amp;gt;
  [...]
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そしてコントローラーで下記のチェックをトリガーします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$scope.$emit(&#39;list:filtered&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;典型的な使い方:c8d5d7f579c3127c5fcd4e00fb86ffe3&#34;&gt;典型的な使い方&lt;/h2&gt;

&lt;p&gt;一般的には、配列やオブジェクトで一連性を持ったものを見せるためにngRepeatを使うなど、他の要素を含んだ要素上で&lt;code&gt;infiniteScroll&lt;/code&gt;ディレクティブを使います。たいてい、infinite-scroll属性に渡す式ではngRepeatの配列にエレメントを追加します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div infinite-scroll=&amp;quot;addMoreItems()&amp;quot;&amp;gt;
  &amp;lt;div ng-repeat=&amp;quot;item in items&amp;quot;&amp;gt;Item number {{$index}}: {{$item}}&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>【第2章】公的機関の成果/基本と原則</title>
      <link>http://kotazi.github.io/blog/post/2015112301/</link>
      <pubDate>Tue, 24 Nov 2015 19:44:59 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015112301/</guid>
      <description>

&lt;p&gt;学生のころは分からなかったことが分かる気がした。&lt;br /&gt;
ドラッカーの基本と原則をKidleで読みなおした。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;多元社会の到来:b0aa24f3472b1b76afe363662b77c804&#34;&gt;多元社会の到来&lt;/h2&gt;

&lt;p&gt;企業以外の組織もマネジメントを必要としている。また、企業内の各部門でもマネジメントは必要。&lt;/p&gt;

&lt;h2 id=&#34;公的機関不振の原因:b0aa24f3472b1b76afe363662b77c804&#34;&gt;公的機関不振の原因&lt;/h2&gt;

&lt;p&gt;公的機関に欠けているものは、成果であって効率ではない。効率によって成果を手にすることはできない。&lt;/p&gt;

&lt;p&gt;公的機関と企業の基本的な違いは、支払いの受け方にある。予算から支払いを受けるということが、成果と業績の意味を変える。予算型組織における成果とは予算獲得である。
予算型組織において、少ない予算、少ない人員で成果を上げることは業績にならない。むしろ組織を危うくしかねない。&lt;/p&gt;

&lt;h2 id=&#34;公的機関成功の条件:b0aa24f3472b1b76afe363662b77c804&#34;&gt;公的機関成功の条件&lt;/h2&gt;

&lt;p&gt;公的機関が成果を上げるうえで必要とするのは偉大な人物ではない。仕組みである。&lt;br /&gt;
公的機関に必要なことは、企業のまねではない。もちろん、成果について評価することは必要である。だがそれらのものは、何よりもまず、病院らしく、行政組織らしく、政府らしくなければならない。自らに特有の使命、も汽笛、機能について徹底的に検討しなければならない。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;公的機関について考えたことはあまりなかった。&lt;br /&gt;
予算型組織という言葉が印象に残った。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>