<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pry on kotazi.com</title>
    <link>http://kotazi.github.io/blog/tags/pry/</link>
    <description>Recent content in Pry on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Dec 2015 17:48:50 +0900</lastBuildDate>
    
	<atom:link href="http://kotazi.github.io/blog/tags/pry/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby - pry導入編</title>
      <link>http://kotazi.github.io/blog/post/20151207_pry/</link>
      <pubDate>Mon, 07 Dec 2015 17:48:50 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/20151207_pry/</guid>
      <description>Railsのデバッグについて調べていた。
pryを知った。便利そうだったことメモ書き。
 Pryとは PryはRuby標準的なIRBシェルの強力な代替手段です。 シンタックスハイライトや、フレキシブルなプラグインアーキテクチャ、実行時の呼び出しやドキュメントの閲覧を備えています。
インストール $ gem install pry pry-doc $ pry  .ls, .pwdなどでShellコマンドを呼び出せる。
Railsプロジェクトに組み込む RailsプロジェクトにPryを入れて、ブレークポイントやステップ実行が行えるようにした。
Gemfileを編集(参考:Railsの開発効率をあげる - Pryを使ってRailsのコンソールをパワーアップ &amp;amp; デバッグをする)
group :development, :test do gem &#39;pry-rails&#39;, &#39;~&amp;gt; 0.3.4&#39; # rails console(もしくは、rails c)でirbの代わりにpryを使われる gem &#39;pry-doc&#39;, &#39;~&amp;gt; 0.8.0&#39; # methodを表示 gem &#39;pry-byebug&#39;, &#39;~&amp;gt; 3.3.0&#39; # デバッグを実施(Ruby 2.0以降で動作する) gem &#39;pry-stack_explorer&#39;, &#39;~&amp;gt; 0.4.9.2&#39; # スタックをたどれる end  ■ モデル確認 [12] pry(main)&amp;gt; show-models Administrator id: integer email: string email_for_index: string hashed_password: string suspended: boolean created_at: datetime updated_at: datetime StaffMember id: integer email: string email_for_index: string family_name: string given_name: string family_name_kana: string given_name_kana: string hashed_password: string start_date: date end_date: date suspended: boolean created_at: datetime updated_at: datetime  ■ ルート確認 [13] pry(main)&amp;gt; show-routes Prefix Verb URI Pattern Controller#Action staff_root GET /staff(.</description>
    </item>
    
  </channel>
</rss>