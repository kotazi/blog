<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Domain on kotazi.com</title>
    <link>http://kotazi.github.io/blog/tags/domain/</link>
    <description>Recent content in Domain on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Nov 2015 08:28:26 +0900</lastBuildDate>
    
	<atom:link href="http://kotazi.github.io/blog/tags/domain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HugoブログとGithub Pagesと独自ドメイン</title>
      <link>http://kotazi.github.io/blog/post/2015111201/</link>
      <pubDate>Thu, 12 Nov 2015 08:28:26 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015111201/</guid>
      <description>Wordpressで続けていたブログをやめて、Hugoでブログを作りなおした。 以前の記事は削除した。 HugoはGoで書かれた静的サイトジェネレータだ。早くて便利。
 Hugoブログの立ちあげ 基本的には公式サイトのQuickstartに従う。
# Hugoをローカルで立ちあげ hugo server --theme=hugo-cactus-theme --buildDrafts -w # 新しく投稿 hugo new post/newpost.md  Github Pages Github PagesもHugo公式のHosting on GitHub Pagesを参考にする。
 git subtreeを使う 全体のコンテンツはmasterブランチに、公開ファイルをgh-pagesブランチで運用 deploy.shの作成   チュートリアルに沿えばGithub Pagesにサイトができる。
独自ドメイン 僕はもともとムームードメインで取得したドメインと、ロリポップのレンタルサーバーを使ってWordpressブログを使っていた。
それにあたりこちらの記事を参考にした。
Hugo + GitHub Pagesでブログを作る#2|TANKSUZUKI.COM
 サブドメインとZone Apex(kotazi.com)で公開するのでは手順が異なる ムームードメインではApex Aliasが使えない そのためGehirn DNSなどを使う必要がある   そんな感じでブログの移行が完了しました。</description>
    </item>
    
  </channel>
</rss>