<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on kotazi.com</title>
    <link>http://kotazi.github.io/blog/tags/angularjs/</link>
    <description>Recent content in Angularjs on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Nov 2015 15:18:19 +0900</lastBuildDate>
    
	<atom:link href="http://kotazi.github.io/blog/tags/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MasonryをAngularで使う際に注意すること</title>
      <link>http://kotazi.github.io/blog/post/2015113001/</link>
      <pubDate>Mon, 30 Nov 2015 15:18:19 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015113001/</guid>
      <description>Masonryのstampが正しく動かないことがあったのでメモ。
 AngularプロジェクトでMasonryとAngularJS Masonry Directiveを利用している。
その際にMasonryのstampが動いていなかったのでメモ。 なんで動かなかったかというとMyIncludeとngIfがよくなかった。
とりあえずサンプル
■ ng-ifバージョン(動かない) See the Pen 【AngularJS】Masonry Directive Behavior with Stamp(ng-if) by Kohei Saeki (@kotazi) on CodePen.

■ ng-showバージョン(動く) See the Pen 【AngularJS】Masonry Directive Behavior with Stamp(ng-show) by Kohei Saeki (@kotazi) on CodePen.

ngIfの場合がDOMが再生性されているので、stampが毎回解除されてしまう。</description>
    </item>
    
    <item>
      <title>【訳読】ngInfiniteScroll</title>
      <link>http://kotazi.github.io/blog/post/2015112701/</link>
      <pubDate>Fri, 27 Nov 2015 15:18:19 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015112701/</guid>
      <description>ngInfiniteScrollについてです。 Issueが溜まっているけれど、一年近く更新がない。
 ドキュメント infiniteScroll (directive in module infinite-scroll)
説明 要素の底がブラウザの底に近づいた時に、infiniteScrollで特定の振る舞いを指定することができます。
使い方 &amp;lt;ANY infinite-scroll=&#39;{expression}&#39; [infinite-scroll-distance=&#39;{number}&#39;] [infinite-scroll-disabled=&#39;{boolean}&#39;] [infinite-scroll-immediate-check=&#39;{boolean}&#39;] [infinite-scroll-listen-for-event=&#39;{string}&#39;]&amp;gt; &amp;lt;/ANY&amp;gt;  パラメータ infinite-scroll - {expression} エレメントの底がブラウザの底に近づいた時に、式を評価します。(基本的には関数呼び出し)
infinite-scroll-distance (optional) - {number} infinite-scrollに評価された式がトリガーされる前に、エレメントの底がブラウザの底にどれだけ近いかを表す数字です。ウインドウの高さの倍数で測定します。たとえば、ブラウザウィンドウの高さが1000pxで、infinite-scroll-distanceが2にセットされている場合、infinite scrollの式はエレメントの底がブラウザウィンドウの底から2000px以内にあるときに評価します。デフォルトは0です。(要素の底がブラウザウィンドウの下部を横切るとき式が評価されます)
infinite-scroll-disabled (optional) - {boolean} ブール式です。trueの場合、他のすべての条件が満たされている場合でも infininite scrollが評価されることはありません。たいていは一時停止などで使われます。例えばAjax読込中などです。スクロールイベントが発火し、この属性が評価を妨げた場合、そのイベントは属性値が再度falseになったタイミングで再度評価されます。
infinite-scroll-immediate-check (optional) - {boolean} スクロールイベントが起こっていない場合でも、ディレクティブがinfinite scroll式を評価するかを指定するブール式です。コンテンツの高さが十分にないときに便利です。デフォルトはtrueです。
infinite-scroll-listen-for-event (optional) - {string} イベント名を設定します。このイベントが実行された際、スクロール位置のチェックが走ります。手動でスクロールハンドラをトリガーする必要がある場合に便利です。
モジュールの読み込み infiniteScrollディレクティブはinfinite-scrollモジュール内で利用可能です。アクセスを可能にするために、infinite-scrollが自身のモジュールの依存関係に含まれていることを確認してください。
var myApp = angular.module(&#39;myApp&#39;, [&#39;infinite-scroll&#39;]);  スクロールイベントを絞る スクロールイベントは非常に頻繁に発火します。これによってパフォーマンスを低下させたり、スクロールの挙動を悪くしてしまうことがあります。これを和らげるために、infiniteScrollではmillisecondsにおけるスクロールイベントの上限を設定することができます。
// you might call this after your module initalization angular.module(&#39;infinite-scroll&#39;).value(&#39;THROTTLE_MILLISECONDS&#39;, 250)  手動でスクロールハンドラをトリガーする アイテムの高さを変更したり隠したりした際に、ユーザーのスクロールイベント無しで短いリストを取得し、再構築させることができます。この場合、infinite-scroll-listen-for-eventを使います。また、スクロールチェックが必要であれば、対応するイベントを発生できます。例えば、</description>
    </item>
    
    <item>
      <title>【訳読】AngularJS - ngInfiniteScroll</title>
      <link>http://kotazi.github.io/blog/post/2015112401/</link>
      <pubDate>Thu, 26 Nov 2015 17:30:17 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015112401/</guid>
      <description>ngInfiniteScroll
Documentation
ドキュメント infiniteScroll (directive in module infinite-scroll)
説明 要素の底がブラウザの底に近づいた時に、infiniteScrollで特定の振る舞いを指定することができます。
使い方 &amp;lt;ANY infinite-scroll=&#39;{expression}&#39; [infinite-scroll-distance=&#39;{number}&#39;] [infinite-scroll-disabled=&#39;{boolean}&#39;] [infinite-scroll-immediate-check=&#39;{boolean}&#39;] [infinite-scroll-listen-for-event=&#39;{string}&#39;]&amp;gt; &amp;lt;/ANY&amp;gt;  パラメータ infinite-scroll - {expression} エレメントの底がブラウザの底に近づいた時に、式を評価します。(基本的には関数呼び出し)
infinite-scroll-distance (optional) - {number} infinite-scrollに評価された式がトリガーされる前に、エレメントの底がブラウザの底にどれだけ近いかを表す数字です。ウインドウの高さの倍数で測定します。たとえば、ブラウザウィンドウの高さが1000pxで、infinite-scroll-distanceが2にセットされている場合、infinite scrollの式はエレメントの底がブラウザウィンドウの底から2000px以内にあるときに評価します。デフォルトは0です。(要素の底がブラウザウィンドウの下部を横切るとき式が評価されます)
infinite-scroll-disabled (optional) - {boolean} ブール式です。trueの場合、他のすべての条件が満たされている場合でも infininite scrollが評価されることはありません。たいていは一時停止などで使われます。例えばAjax読込中などです。スクロールイベントが発火し、この属性が評価を妨げた場合、そのイベントは属性値が再度falseになったタイミングで再度評価されます。
infinite-scroll-immediate-check (optional) - {boolean} スクロールイベントが起こっていない場合でも、ディレクティブがinfinite scroll式を評価するかを指定するブール式です。コンテンツの高さが十分にないときに便利です。デフォルトはtrueです。
infinite-scroll-listen-for-event (optional) - {string} イベント名を設定します。このイベントが実行された際、スクロール位置のチェックが走ります。手動でスクロールハンドラをトリガーする必要がある場合に便利です。
モジュールの読み込み infiniteScrollディレクティブはinfinite-scrollモジュール内で利用可能です。アクセスを可能にするために、infinite-scrollが自身のモジュールの依存関係に含まれていることを確認してください。
var myApp = angular.module(&#39;myApp&#39;, [&#39;infinite-scroll&#39;]);  スクロールイベントを絞る Scroll events can be triggered very frequently, which can hurt performance and make scrolling appear jerky.</description>
    </item>
    
    <item>
      <title>AngularJS Masonry Directiveの検証</title>
      <link>http://kotazi.github.io/blog/post/2015111101/</link>
      <pubDate>Wed, 11 Nov 2015 17:31:11 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2015111101/</guid>
      <description> 現在プロジェクトで使っているMasonryが正しく動作しなくなった。 確認もかねてサンプルを作った。
See the Pen 【AngularJS】Masonry Directive Behavior with adding items by Kohei Saeki (@kotazi) on CodePen.

■ 基本サンプル &amp;lt;div masonry&amp;gt; &amp;lt;div class=&amp;quot;masonry-brick&amp;quot; ng-repeat=&amp;quot;brick in bricks&amp;quot;&amp;gt; &amp;lt;img ng-src=&amp;quot;{{ brick.src }}&amp;quot; alt=&amp;quot;A masonry brick&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  ■ Attributes  item-selector: エレメント指定。masonry-brick属性も付ける必要あり？ load-images: ImagesLoaded用。初期値でtrue reload-on-show: 表示切替時にリロード reload-on-resize: Masonryアイテムの横幅が変更された時リロード masonry-options: その他のオプションはこれで設定  ■ URL  Masonry AngularJS Masonry Directive  </description>
    </item>
    
  </channel>
</rss>