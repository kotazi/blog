<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Routing on kotazi.com</title>
    <link>http://kotazi.github.io/blog/tags/routing/</link>
    <description>Recent content in Routing on kotazi.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Jan 2016 18:31:41 +0900</lastBuildDate>
    
	<atom:link href="http://kotazi.github.io/blog/tags/routing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Rails】Routing周りのメモ書き</title>
      <link>http://kotazi.github.io/blog/post/2016/0107_rails_routing/</link>
      <pubDate>Thu, 07 Jan 2016 18:31:41 +0900</pubDate>
      
      <guid>http://kotazi.github.io/blog/post/2016/0107_rails_routing/</guid>
      <description>新しいRailsプロジェクトのroutes.rbを読んでいて調べたこととか。
 ◯ namespaceとscope moduleとscopeのち外  namespaceはURI PatternもController#Actionも指定したパスに scope moduleはController#Actionのみ指定したパスに scopeはURI Patternのみ指定したパスに  routeのmoduleとnamespaceとscopeの違い
◯ constraintsについて constraintsを使うことでさまざまな制限を兼ねることができる。 独自のクラスを使用すうることなども可能。
rails routing constraintsについて
◯ resourcesルーティング一覧   HTTP動詞 パス コントローラ#アクション 目的     GET /photos photos#index すべての写真の一覧を表示   GET /photos/new photos#new 写真を1つ作成するためのHTMLフォームを返す   POST /photos photos#create 写真を1つ作成する   GET /photos/:id photos#show 特定の写真を表示する   GET /photos/:id/edit photos#edit 写真編集用のHTMLフォームを1つ返す   PATCH/PUT /photos/:id photos#update 特定の写真を更新する   DELETE /photos/:id photos#destroy 特定の写真を削除する     ActiveAdminとEngineについてはまた今度。</description>
    </item>
    
  </channel>
</rss>